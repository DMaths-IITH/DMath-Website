{"version":3,"sources":["webpack://department-of-mathematics/./src/components/addnew/AddNew.tsx","webpack://department-of-mathematics/./src/components/batchview/BatchView.tsx","webpack://department-of-mathematics/./src/components/carousel/Carousel.tsx","webpack://department-of-mathematics/./src/components/gridview/GridView.tsx","webpack://department-of-mathematics/./src/components/infoview/InfoView.tsx","webpack://department-of-mathematics/./src/components/profileview/ProfileView.tsx","webpack://department-of-mathematics/./src/components/publicationview/PublicationView.tsx","webpack://department-of-mathematics/./src/components/tableview/TableView.tsx","webpack://department-of-mathematics/./src/components/imageview/ImageView.tsx","webpack://department-of-mathematics/./src/components/table/Table.tsx","webpack://department-of-mathematics/./src/components/marquee/Marquee.tsx","webpack://department-of-mathematics/./src/utils/PageUtils.tsx","webpack://department-of-mathematics/./src/components/deletethis/DeleteThis.tsx","webpack://department-of-mathematics/./src/components/adminbar/AdminBar.tsx","webpack://department-of-mathematics/./src/components/pageview/PageView.tsx"],"names":["render","className","value","onChange","event","props","onSelect","target","this","options","map","each","React","addNewEntry","data","page_data","component_id","Students","push","deleteEntry","index","splice","editEntry","getDisplayElements","GrpImage","src","style","margin","marginLeft","padding","color","fontSize","BatchName","person","size","width","editDetails","key","getEditElements","marginRight","placeholder","textAlign","onClick","edit_mode","state","nextPic","imagesNum","images","length","clearInterval","id","setInterval","timeout","setState","currentPic","prevPic","swipeRightEvent","stopPropagation","swipeLeftEvent","addNewPic","removePic","console","log","editLink","newLink","image","Swipeable","onSwipedRight","onSwipedLeft","backgroundColor","paddingTop","paddingBottom","componentWillUnmount","deleteElement","addNewComponent","type","new_id","getNewId","getNewModel","items","getComponent","addLink","links","removeLink","modifyLink","modifyLinkText","titlecolor","undefined","titleColor","title","titleAlign","info","alignSelf","marginTop","href","link","linktext","rightFooter","display","flexDirection","justifyContent","alignItems","addExtras","extraDetails","removeExtras","modifyExtras","Image","Name","Designation","Area","fontStyle","textDecoration","detail","email","people","name","details","toggleContentView","expand","marginBottom","content","paddingRight","paddingLeft","speaker","dateVenue","editItems","caption","editRowElement","rowIndex","colIndex","editHeaderElement","addrow","Array","Number","fill","isNumeric","test","delete","row_ind","prompt","alert","editTitle","headers","rows","col","editContent","cols_num","cols","datetime","Date","getMilliseconds","toString","getSeconds","getMinutes","getHours","getDate","getMonth","getFullYear","context","confirm","children","edit_state","onSubmit","edit_toggle","PageContext","component_types","_page_data","JSON","parse","stringify","saveChanges","FirebaseUtils","pageContext","page","current_data","context_object","newState","Provider","Consumer"],"mappings":"0NAuBA,E,6FAdIA,OAAA,WAAS,IAAD,OACJ,OACI,uBAAKC,UAAU,iBACX,uBAAKA,UAAU,eACf,0BAAQA,UAAU,gBAAgBC,MAAO,eAAgBC,SAAU,SAACC,GAAS,EAAKC,MAAMC,SAASF,EAAMG,OAAOL,SAC1G,0BAAQA,MAAO,gBAAiB,gBAC/BM,KAAKH,MAAMI,QAAQC,KAAI,SAACC,GAAD,OAAkB,0BAAQT,MAAOS,GAAOA,OAEpE,uBAAKV,UAAU,iB,GATVW,a,UCyErB,E,oJApEIC,YAAc,WACV,IAAIC,EAAO,EAAKT,MAAMU,UAAX,KACVD,EAAK,EAAKT,MAAMW,cAAiCC,SAASC,KAAK,IAChE,EAAKb,MAAMU,UAAX,KAA6BD,I,EAGjCK,YAAc,SAACC,GACX,IAAIN,EAAO,EAAKT,MAAMU,UAAX,KACVD,EAAK,EAAKT,MAAMW,cAAiCC,SAASI,OAAOD,EAAM,GACxE,EAAKf,MAAMU,UAAX,KAA6BD,I,EAGjCQ,UAAY,SAACF,EAAelB,GACxB,IAAIY,EAAO,EAAKT,MAAMU,UAAX,KACXD,EAAK,EAAKT,MAAMW,cAAhB,SAA0CI,GAASlB,EACnD,EAAKG,MAAMU,UAAX,KAA6BD,I,EAGjCS,mBAAqB,WACjB,IAAMT,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OACI,uBAAKf,UAAU,iBACM,KAAhBa,EAAKU,SAAgB,KAAK,uBAAKC,IAAKX,EAAKU,WAC1C,uBAAKvB,UAAU,cACX,qBAAGyB,MAAO,CAACC,OAAQ,MAAOC,WAAY,OAAQC,QAAS,MAAOC,MAAO,WAAYC,SAAU,WAAYjB,EAAKkB,UAAY,YAE5H,uBAAK/B,UAAU,gBACVa,EAAKG,SAASP,KAAI,SAAAuB,GAAM,OAAI,uBAAKhC,UAAU,eAAc,gBAAC,MAAD,CAAOiC,KAAM,KAAK,qBAAGR,MAAO,CAACS,MAAM,QAAQ,yBAAIF,W,EAMzHG,YAAc,SAACC,EAAYnC,GACvB,IAAIY,EAAO,EAAKT,MAAMU,UAAX,KACXD,EAAK,EAAKT,MAAMW,cAAcqB,GAAOnC,EACrC,EAAKG,MAAMU,UAAX,KAA6BD,I,EAGjCwB,gBAAkB,WACd,IAAMxB,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OACI,uBAAKf,UAAU,qBACX,uBAAKA,UAAU,yBACX,uBAAKyB,MAAO,CAACa,YAAa,SAA1B,eACA,yBAAOC,YAAY,oBAAoBd,MAAO,CAACS,MAAM,SAAUhC,SAAU,SAACC,GAAS,EAAKgC,YAAY,YAAahC,EAAMG,OAAOL,QAASA,MAAOY,EAAKkB,aAEvJ,uBAAK/B,UAAU,yBACX,uBAAKyB,MAAO,CAACa,YAAa,SAA1B,gBACA,yBAAOC,YAAY,uBAAuBd,MAAO,CAACS,MAAM,SAAUhC,SAAU,SAACC,GAAS,EAAKgC,YAAY,WAAYhC,EAAMG,OAAOL,QAASA,MAAOY,EAAKU,YAEzJ,uBAAKE,MAAO,CAACC,OAAQ,MAAOC,WAAY,OAAQG,SAAU,QAASU,UAAW,OAAON,MAAM,SAA3F,cACA,uBAAKlC,UAAU,oBACVa,EAAKG,SAASP,KAAI,SAACuB,EAAQb,GAAT,OAAmB,uBAAKiB,IAAKjB,EAAOnB,UAAU,wBAC7D,yBAAOuC,YAAa,gBAAkBpB,EAAQ,GAAIM,MAAO,CAACS,MAAM,OAAQhC,SAAU,SAACC,GAAS,EAAKkB,UAAUF,EAAOhB,EAAMG,OAAOL,QAASA,MAAO+B,IAC/I,0BAAQI,IAAKjB,EAAOsB,QAAS,WAAK,EAAKvB,YAAYC,IAASnB,UAAU,+BAAtE,SAEJ,0BAAQyB,MAAO,CAACS,MAAO,OAAQO,QAAS,WAAK,EAAK7B,gBAAlD,oB,iCAMhBb,OAAA,WACI,OAAOQ,KAAKH,MAAMsC,UAAYnC,KAAK8B,kBAAoB9B,KAAKe,sB,GAlE5CX,a,UC+GxB,E,YApGI,WAAYP,EAAsBuC,GAAsB,IAAD,SACnD,cAAMvC,EAAMuC,IAAZ,MAYJC,QAAS,WACL,IACMC,EADO,EAAKzC,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cAC9B+B,OAAOC,OAC9BC,cAAc,EAAKC,IACnB,EAAKA,GAAKC,YAAY,EAAKN,QAAS,EAAKO,SACzC,EAAKC,SAAS,CACVC,WAAa,EAAKV,MAAMU,aAAeR,EAAY,EAAK,EAAI,EAAKF,MAAMU,WAAa,KAnBrC,EAuBvDC,QAAS,WACL,IACMT,EADO,EAAKzC,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cAC9B+B,OAAOC,OAC9BC,cAAc,EAAKC,IACnB,EAAKA,GAAKC,YAAY,EAAKN,QAAS,EAAKO,SACzC,EAAKC,SAAS,CACVC,WAAuC,IAA1B,EAAKV,MAAMU,WAAoBR,EAAU,EAAI,EAAKF,MAAMU,WAAa,KA7BnC,EAiCvDE,gBAAgB,SAACpD,GACbA,EAAMA,MAAMqD,kBACZ,EAAKF,WAnC8C,EAsCvDG,eAAe,WACX,EAAKb,WAvC8C,EA0CvDc,UAAY,WACR,IAAI7C,EAAO,EAAKT,MAAMU,UAAX,KACVD,EAAK,EAAKT,MAAMW,cAAgC+B,OAAO7B,KAAK,IAC7D,EAAKb,MAAMU,UAAX,KAA6BD,IA7CsB,EAgDvD8C,UAAY,SAACxC,GACT,IAAIN,EAAO,EAAKT,MAAMU,UAAX,KACX8C,QAAQC,IAAI1C,GACXN,EAAK,EAAKT,MAAMW,cAAgC+B,OAAO1B,OAAOD,EAAM,GACrE,EAAKf,MAAMU,UAAX,KAA6BD,IApDsB,EAuDvDiD,SAAW,SAAC3C,EAAe4C,GACvB,IAAIlD,EAAO,EAAKT,MAAMU,UAAX,KACVD,EAAK,EAAKT,MAAMW,cAAgC+B,OAAO3B,GAAS4C,EACjE,EAAK3D,MAAMU,UAAX,KAA6BD,IA1DsB,EA6DvDwB,gBAAkB,WACd,IAAMxB,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OACI,uBAAKf,UAAU,gBACX,uBAAKA,UAAU,oBAAf,oBACA,uBAAKA,UAAU,oBACVa,EAAKiC,OAAOrC,KAAI,SAACuD,EAAO7C,GAAR,OAAkB,uBAAKnB,UAAU,oBAC9C,yBAAOyB,MAAO,CAACS,MAAM,OAAQK,YAAa,cAAgBpB,EAAQ,GAAIlB,MAAO+D,EAAO9D,SAAU,SAACC,GAAS,EAAK2D,SAAS3C,EAAOhB,EAAMG,OAAOL,UAC1I,0BAAQD,UAAU,qBAAqByC,QAAS,WAAK,EAAKkB,UAAUxC,KAApE,UAGR,0BAAQM,MAAO,CAACS,MAAO,SAAUO,QAAS,WAAK,EAAKiB,cAApD,mBAxE2C,EA6EvDpC,mBAAqB,WACjB,IAAMT,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cAC/C8B,EAAYhC,EAAKiC,OAAOC,OAC9B,OACI,gBAACkB,EAAA,EAAD,CAAWC,cAAe,EAAKX,gBAAiBY,aAAc,EAAKV,gBAC/D,uBAAKhC,MAAO,CAACS,MAAM,OAAQkC,gBAAgB,mBAAoBC,WAAW,MAAOC,cAAc,QAC3F,uBAAKtE,UAAU,YACV6C,EAAY,EAAI,gBAAC,MAAD,CAAsBZ,KAAM,GAAIJ,MAAM,WAAWY,QAAS,EAAKa,QAAStD,UAAU,oBAAsB,KACzH,uBAAKA,UAAU,iBACX,uBAAKwB,IAAKX,EAAKiC,OAAO,EAAKH,MAAMU,YAAanB,MAAM,UAEvDW,EAAY,EAAI,gBAAC,MAAD,CAAuBZ,KAAM,GAAIJ,MAAM,WAAWY,QAAS,EAAKG,QAAS5C,UAAU,oBAAsB,SAtF1I,EAAK2C,MAAQ,CACTU,WAAY,GAEhB,EAAKF,QAAU,IACf,EAAKF,GAAKC,YAAY,EAAKN,QAAS,EAAKO,SANU,G,uCASvDoB,qBAAA,WACIvB,cAAczC,KAAK0C,K,EAqFvBlD,OAAA,WACI,OAAOQ,KAAKH,MAAMsC,UAAYnC,KAAK8B,kBAAoB9B,KAAKe,sB,GApG7CX,aCmDtB,E,oJApDG6D,cAAgB,SAACzD,EAAsBI,GACnC,IAAIN,EAAO,EAAKT,MAAMU,UAAX,YACJD,EAAKE,GACXF,EAAK,EAAKT,MAAMW,cAAhB,MAGIK,OAAOD,EAAM,GAClB,EAAKf,MAAMU,UAAX,KAA6BD,I,EAGjC4D,gBAAkB,SAACC,EAAcvD,GAC7B,IAAMwD,EAASC,IACX/D,EAAO,EAAKT,MAAMU,UAAX,KACVD,EAAK,EAAKT,MAAMW,cAAhB,MAAqFK,OAAOD,EAAM,EAAE,CACjG,aAAgBwD,EAChB,KAAQD,IAEZ7D,EAAK8D,GAAUE,EAAYH,GAC3B,EAAKtE,MAAMU,UAAX,KAA6BD,I,EAGjCS,mBAAqB,WACjB,IAAMT,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OACI,uBAAKf,UAAW,EAAKI,MAAMsE,MACtB7D,EAAKiE,MAAMrE,KAAI,SAAAC,GAAI,OAAIqE,EAAarE,EAAKK,aAAcL,EAAKgE,KAAM,EAAKtE,MAAMsC,UAAW,EAAKtC,MAAMU,gB,EAKhHuB,gBAAkB,WACd,IAAMxB,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OACI,uBAAKf,UAAW,EAAKI,MAAMsE,KAAO,QAC7B7D,EAAKiE,MAAMrE,KAAI,SAACC,EAAMS,GAAP,OAAiB,uBAAKnB,UAAU,uBAC5C,0BAAQA,UAAU,qBAAqByC,QAAS,WAAK,EAAK+B,cAAc9D,EAAKK,aAAcI,KAA3F,gBAAkHT,EAAKgE,KAAvH,KACCK,EAAarE,EAAKK,aAAcL,EAAKgE,KAAM,EAAKtE,MAAMsC,UAAW,EAAKtC,MAAMU,eAEjF,0BAAQW,MAAO,CAACS,MAAM,SAAUjC,MAAO,UAAWC,SAAU,SAACC,GAAS,EAAKsE,gBAAgBtE,EAAMG,OAAOL,MAAQY,EAAKiE,MAAM/B,UACvH,0BAAQ9C,MAAO,mBAAoB,mBACnC,0BAAQA,MAAO,YAAa,YAC5B,0BAAQA,MAAO,eAAgB,kB,iCAM/CF,OAAA,WACI,OAAOQ,KAAKH,MAAMsC,UAAYnC,KAAK8B,kBAAoB9B,KAAKe,sB,GAlD7CX,aCoGvB,E,oJAvGIqE,QAAU,WACN,IAAInE,EAAO,EAAKT,MAAMU,UAAX,KACVD,EAAK,EAAKT,MAAMW,cAAgCkE,MAAMhE,KAAK,CACxD,KAAO,GACP,SAAW,KAEf,EAAKb,MAAMU,UAAX,KAA6BD,I,EAGjCqE,WAAa,SAAC/D,GACV,IAAIN,EAAO,EAAKT,MAAMU,UAAX,KACVD,EAAK,EAAKT,MAAMW,cAAgCkE,MAAM7D,OAAOD,EAAM,GACpE,EAAKf,MAAMU,UAAX,KAA6BD,I,EAGjCsE,WAAa,SAAChE,EAAelB,GACzB,IAAIY,EAAO,EAAKT,MAAMU,UAAX,KACVD,EAAK,EAAKT,MAAMW,cAAgCkE,MAAM9D,GAAvD,KAAwElB,EACxE,EAAKG,MAAMU,UAAX,KAA6BD,I,EAGjCuE,eAAiB,SAACjE,EAAelB,GAC7B,IAAIY,EAAO,EAAKT,MAAMU,UAAX,KACVD,EAAK,EAAKT,MAAMW,cAAgCkE,MAAM9D,GAAvD,SAA4ElB,EAC5E,EAAKG,MAAMU,UAAX,KAA6BD,I,EAGjCsB,YAAc,SAACC,EAAanC,GACxB,IAAIY,EAAO,EAAKT,MAAMU,UAAX,KACXD,EAAK,EAAKT,MAAMW,cAAcqB,GAAOnC,EACrC,EAAKG,MAAMU,UAAX,KAA6BD,I,EAGjCS,mBAAqB,WACjB,IAAMT,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cAC/CsE,OAA0CC,IAApBzE,EAAK0E,WAA4B,QAAU1E,EAAK0E,WAC5E,OAAO,uBAAKvF,UAAU,oBACDsF,IAAfzE,EAAK2E,OAAoC,KAAb3E,EAAK2E,MAAc,uBAAKxF,UAAU,gBAAgByB,MAAO,CAACI,MAAOwD,EAAY7C,UAAW3B,EAAK4E,aAAc5E,EAAK2E,OAAc,UAC5IF,IAAdzE,EAAK6E,MAAkC,KAAZ7E,EAAK6E,KAAa,qBAAG1F,UAAU,mBAAmBa,EAAK6E,MAAY,KAC/F7E,EAAKoE,MAAMxE,KAAI,SAAAC,GAAI,OAAI,qBAAGe,MAAO,CAACkE,UAAW,aAAcC,UAAU,SAAS,qBAAGC,KAAMnF,EAAKoF,KAAMxF,OAAO,UAAUI,EAAKqF,cACxHlF,EAAKmF,YAAc,qBAAGvE,MAAO,CAACkE,UAAU,aAAc9E,EAAKmF,aAAkB,O,EAItF3D,gBAAkB,WACd,IAAMxB,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OAAO,uBAAKf,UAAU,mBAClB,uBAAKA,UAAU,wBACX,uBAAKA,UAAU,qBAAf,UACA,uBAAKA,UAAU,qBACX,yBAAOuC,YAAY,uBAAuBd,MAAO,CAACS,MAAM,OAAQjC,MAAOY,EAAK2E,MAAOtF,SAAU,SAACC,GAAS,EAAKgC,YAAY,QAAQhC,EAAMG,OAAOL,UAC7I,uBAAKwB,MAAO,CAACwE,QAAQ,OAAQC,cAAc,SAAUC,eAAe,aAAcC,WAAW,aAAclE,MAAM,MAAOR,OAAO,QAC3H,uBAAKD,MAAO,CAACwE,QAAQ,OAAQC,cAAc,MAAOC,eAAe,gBAAiBC,WAAW,SAAUlE,MAAM,UACzG,2CACA,0BAAQjC,MAAOY,EAAK4E,WAAYhE,MAAO,CAACS,MAAO,OAAQP,WAAW,OAAQzB,SAAU,SAACC,GAAS,EAAKgC,YAAY,aAAahC,EAAMG,OAAOL,SACrI,0BAAQA,MAAM,UAAd,UACA,0BAAQA,MAAM,QAAd,QACA,0BAAQA,MAAM,SAAd,WAGR,uBAAKwB,MAAO,CAACwE,QAAQ,OAAQC,cAAc,MAAOC,eAAe,gBAAiBC,WAAW,SAAUlE,MAAM,UACzG,2CACA,0BAAQjC,MAAOY,EAAK0E,WAAY9D,MAAO,CAACS,MAAO,OAAQP,WAAW,OAAQzB,SAAU,SAACC,GAAS,EAAKgC,YAAY,aAAahC,EAAMG,OAAOL,SACrI,0BAAQA,MAAM,SAAd,SACA,0BAAQA,MAAM,YAAd,kBAMpB,uBAAKD,UAAU,wBACX,uBAAKA,UAAU,qBAAf,YACA,4BAAUuC,YAAY,yBAAyBvC,UAAU,oBAAoBC,MAAOY,EAAK6E,KAAMxF,SAAU,SAACC,GAAS,EAAKgC,YAAY,OAAOhC,EAAMG,OAAOL,WAE5J,uBAAKwB,MAAO,CAACwE,QAAQ,OAAQC,cAAc,MAAOE,WAAW,aAAc1E,OAAQ,MAAOQ,MAAM,MAAOiE,eAAe,kBAClH,uBAAKnG,UAAU,qBAAf,UACA,uBAAKA,UAAU,2BACVa,EAAKoE,MAAMxE,KAAI,SAACC,EAAMS,GAAP,OAAiB,uBAAKnB,UAAU,4BAC5C,uBAAKA,UAAU,qBACX,yBAAOuC,YAAY,OAAOd,MAAO,CAACS,MAAM,OAAQjC,MAAOS,EAAKoF,KAAM5F,SAAU,SAACC,GAAS,EAAKgF,WAAWhE,EAAMhB,EAAMG,OAAOL,WAE7H,uBAAKD,UAAU,qBACX,yBAAOuC,YAAY,oBAAoBd,MAAO,CAACS,MAAM,OAAQjC,MAAOS,EAAKqF,SAAU7F,SAAU,SAACC,GAAS,EAAKiF,eAAejE,EAAMhB,EAAMG,OAAOL,WAElJ,0BAAQD,UAAU,4BAA4ByC,QAAS,WAAK,EAAKyC,WAAW/D,KAA5E,SAEJ,0BAAQM,MAAO,CAACE,WAAY,OAAQc,QAAS,WAAK,EAAKuC,YAAvD,aAGR,uBAAKhF,UAAU,wBACX,uBAAKA,UAAU,qBAAf,WACA,yBAAOuC,YAAY,+BAA+BvC,UAAU,oBAAoBC,MAAOY,EAAKmF,YAAa9F,SAAU,SAACC,GAAS,EAAKgC,YAAY,cAAchC,EAAMG,OAAOL,a,iCAKrLF,OAAA,WACI,OACIQ,KAAKH,MAAMsC,UAAYnC,KAAK8B,kBAAoB9B,KAAKe,sB,GApG1CX,aC8FvB,E,oJA5FIwB,YAAc,SAACC,EAAanC,GACxB,IAAIY,EAAO,EAAKT,MAAMU,UAAX,KACXD,EAAK,EAAKT,MAAMW,cAAcqB,GAAOnC,EACrC,EAAKG,MAAMU,UAAX,KAA6BD,I,EAGjCwF,UAAY,WACR,IAAMxF,EAAO,EAAKT,MAAMU,UAAX,KACZD,EAAK,EAAKT,MAAMW,cAAmCuF,aAAarF,KAAK,IACtE,EAAKb,MAAMU,UAAX,KAA6BD,I,EAGjC0F,aAAe,SAACpF,GACZ,IAAMN,EAAO,EAAKT,MAAMU,UAAX,KACZD,EAAK,EAAKT,MAAMW,cAAmCuF,aAAalF,OAAOD,EAAM,GAC9E,EAAKf,MAAMU,UAAX,KAA6BD,I,EAGjC2F,aAAe,SAACrF,EAAelB,GAC3B,IAAMY,EAAO,EAAKT,MAAMU,UAAX,KACZD,EAAK,EAAKT,MAAMW,cAAmCuF,aAAanF,GAASlB,EAC1E,EAAKG,MAAMU,UAAX,KAA6BD,I,EAGjCS,mBAAqB,WAAM,IAAD,EAChBT,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OACI,uBAAKf,UAAU,eACX,uBAAKA,UAAU,wBACX,uBAAMA,UAAU,mBAAmBwB,IAAKX,EAAK4F,MAAOvE,MAAM,UAE9D,uBAAKlC,UAAU,eACX,qBAAGA,UAAU,mBAAmBa,EAAK6F,MACrC,qBAAG1G,UAAU,0BAA0Ba,EAAK8F,aAC5B,KAAd9F,EAAK+F,KAAe,qBAAG5G,UAAU,mBAAmB,sBAAsB,qBAAGyB,MAAO,CAACoF,UAAW,SAAUnF,OAAQ,MAAMoF,eAAe,UAAWb,QAAQ,WAAYpF,EAAK+F,OAAgB,KAHjM,UAIK/F,EAAKyF,oBAJV,aAIK,EAAmB7F,KAAI,SAAAsG,GAAM,OAAI,qBAAG/G,UAAU,qBAAqB+G,MACnD,KAAflG,EAAKmG,MAAgB,qBAAGhH,UAAU,qBAAqB,UAAU,qBAAG6F,KAAM,WAAahF,EAAKmG,MAAOvF,MAAO,CAACoF,UAAW,SAAUC,eAAgB,OAAQjF,MAAO,YAAahB,EAAKmG,QAAiB,KACpL,KAAdnG,EAAKiF,KAAe,qBAAG9F,UAAU,qBAAoB,qBAAG6F,KAAMhF,EAAKiF,MAAd,mBAAjC,KAAgF,Q,EAMtHzD,gBAAkB,WACd,IAAMxB,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OACI,uBAAKf,UAAU,eACX,uBAAKA,UAAU,mBACX,uBAAKA,UAAU,uBACX,uBAAKA,UAAU,4BAAf,SACA,yBAAOuC,YAAY,qBAAqBvC,UAAU,uBAAuBC,MAAOY,EAAK6F,KAAMxG,SAAU,SAACC,GAAS,EAAKgC,YAAY,OAAOhC,EAAMG,OAAOL,WAExJ,uBAAKD,UAAU,uBACX,uBAAKA,UAAU,4BAAf,UACA,yBAAOuC,YAAY,YAAYvC,UAAU,uBAAuBC,MAAOY,EAAK4F,MAAOvG,SAAU,SAACC,GAAS,EAAKgC,YAAY,QAAQhC,EAAMG,OAAOL,WAEjJ,uBAAKD,UAAU,uBACX,uBAAKA,UAAU,4BAAf,gBACA,yBAAOuC,YAAY,yBAAyBvC,UAAU,uBAAuBC,MAAOY,EAAK8F,YAAazG,SAAU,SAACC,GAAS,EAAKgC,YAAY,cAAchC,EAAMG,OAAOL,WAE1K,uBAAKD,UAAU,uBACX,uBAAKA,UAAU,4BAAf,sBACA,4BAAUuC,YAAY,qCAAqCvC,UAAU,uBAAuBC,MAAOY,EAAK+F,KAAM1G,SAAU,SAACC,GAAS,EAAKgC,YAAY,OAAOhC,EAAMG,OAAOL,WAE3K,uBAAKD,UAAU,uBACX,uBAAKA,UAAU,4BAAf,WACA,uBAAKA,UAAU,yBACVa,EAAKyF,aAAa7F,KAAI,SAACC,EAAMS,GAAP,OAAiB,uBAAKnB,UAAU,wBACnD,yBAAOuC,YAAa,iCAAmCpB,EAAQ,GAAIM,MAAO,CAACS,MAAM,OAAQjC,MAAOS,EAAMR,SAAU,SAACC,GAAS,EAAKqG,aAAarF,EAAOhB,EAAMG,OAAOL,UAChK,0BAAQD,UAAU,6BAA6ByC,QAAS,WAAK,EAAK8D,aAAapF,KAA/E,SAEJ,0BAAQsB,QAAS,WAAK,EAAK4D,cAA3B,aAGR,uBAAKrG,UAAU,uBACX,uBAAKA,UAAU,4BAAf,UACA,yBAAOuC,YAAY,yBAAyBvC,UAAU,uBAAuBC,MAAOY,EAAKmG,MAAO9G,SAAU,SAACC,GAAS,EAAKgC,YAAY,QAAQhC,EAAMG,OAAOL,WAE9J,uBAAKD,UAAU,uBACX,uBAAKA,UAAU,4BAAf,SACA,yBAAOuC,YAAY,kCAAkCvC,UAAU,uBAAuBC,MAAOY,EAAKiF,KAAM5F,SAAU,SAACC,GAAS,EAAKgC,YAAY,OAAOhC,EAAMG,OAAOL,c,iCAOrLF,OAAA,WACI,OAAOQ,KAAKH,MAAMsC,UAAYnC,KAAK8B,kBAAoB9B,KAAKe,sB,GA1F1CX,aCkD1B,E,oJA/CIwB,YAAc,SAACC,EAAanC,GACxB,IAAIY,EAAO,EAAKT,MAAMU,UAAX,KACXD,EAAK,EAAKT,MAAMW,cAAcqB,GAAOnC,EACrC,EAAKG,MAAMU,UAAX,KAA6BD,I,EAGjCwB,gBAAkB,WACd,IAAMxB,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OACI,uBAAKf,UAAU,yBACX,uBAAKA,UAAU,yBACX,uBAAKA,UAAU,8BAAf,WACA,yBAAOuC,YAAY,0BAA0Bd,MAAO,CAACS,MAAM,QAAShC,SAAU,SAACC,GAAS,EAAKgC,YAAY,SAAUhC,EAAMG,OAAOL,QAASA,MAAOY,EAAKoG,UAEzJ,uBAAKjH,UAAU,yBACX,uBAAKA,UAAU,8BAAf,SACA,4BAAUuC,YAAY,mBAAmBd,MAAO,CAACS,MAAO,QAAShC,SAAU,SAACC,GAAS,EAAKgC,YAAY,OAAQhC,EAAMG,OAAOL,QAASA,MAAOY,EAAKqG,QAEpJ,uBAAKlH,UAAU,yBACX,uBAAKA,UAAU,8BAAf,YACA,yBAAOuC,YAAY,uCAAuCd,MAAO,CAACS,MAAM,QAAShC,SAAU,SAACC,GAAS,EAAKgC,YAAY,UAAWhC,EAAMG,OAAOL,QAASA,MAAOY,EAAKsG,a,EAMnL7F,mBAAqB,WACjB,IAAMT,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OACI,uBAAKf,UAAU,sBACX,uBAAKA,UAAU,uBACX,gBAAC,MAAD,CAAOiC,KAAM,KACb,qBAAGR,MAAO,CAACS,MAAO,QACbrB,EAAKoG,OAAS,IACf,qBAAGxF,MAAO,CAACI,MAAM,aAAchB,EAAKqG,MACnC,IAAMrG,EAAKsG,Y,iCAOhCpH,OAAA,WACI,OAAOQ,KAAKH,MAAMsC,UAAYnC,KAAK8B,kBAAoB9B,KAAKe,sB,GA7CtCX,a,UC4F9B,E,YArFI,WAAYP,EAAuBuC,GAAuB,IAAD,SACrD,cAAMvC,EAAOuC,IAAb,MAOJyE,kBAAoB,WAChB,EAAKhE,SAAS,CACViE,QAAS,EAAK1E,MAAM0E,UAV6B,EAczDlF,YAAc,SAACC,EAAanC,GACxB,IAAMY,EAAO,EAAKT,MAAMU,UAAX,KACH,SAANsB,GAAsB,aAANA,EAChBvB,EAAK,EAAKT,MAAMW,cAAcqB,GAAOnC,EAGrCY,EAAK,EAAKT,MAAMW,cAAhB,MAAuCqB,GAAOnC,EAElD,EAAKG,MAAMU,UAAX,KAA6BD,IAtBwB,EAyBzDwB,gBAAkB,WACd,OACI,uBAAKrC,UAAU,gBACX,uBAAKA,UAAU,iBACX,uBAAKA,UAAU,oBACX,uBAAKyB,MAAO,CAAC6F,aAAc,MAAOxF,SAAS,UAA3C,UACA,yBAAOS,YAAY,uBAAuBtC,MAAO,EAAK0C,MAAM9B,KAAK2E,MAAO/D,MAAO,CAACS,MAAM,OAAQhC,SAAU,SAACC,GAAS,EAAKgC,YAAY,QAAShC,EAAMG,OAAOL,UACzJ,uBAAKwB,MAAO,CAAC6F,aAAc,MAAO1B,UAAW,MAAO9D,SAAS,UAA7D,YACA,4BAAUS,YAAY,yBAAyBtC,MAAO,EAAK0C,MAAM9B,KAAK0G,QAAS9F,MAAO,CAACS,MAAM,OAAQhC,SAAU,SAACC,GAAS,EAAKgC,YAAY,UAAWhC,EAAMG,OAAOL,UAClK,uBAAKD,UAAU,sBACX,uBAAKyB,MAAO,CAACS,MAAM,OAAQI,YAAa,MAAOkF,aAAa,QACxD,uBAAK/F,MAAO,CAAC6F,aAAc,QAA3B,SACA,yBAAO/E,YAAY,sBAAsBd,MAAO,CAACS,MAAM,QAAShC,SAAU,SAACC,GAAS,EAAKgC,YAAY,OAAQhC,EAAMG,OAAOL,QAASA,MAAO,EAAK0C,MAAM9B,KAAKoE,MAAMa,QAEpK,uBAAKrE,MAAO,CAACS,MAAM,OAAQP,WAAY,MAAO8F,YAAY,QACtD,uBAAKhG,MAAO,CAAC6F,aAAc,QAA3B,sBACA,yBAAO/E,YAAY,gCAAgCd,MAAO,CAACS,MAAM,QAAShC,SAAU,SAACC,GAAS,EAAKgC,YAAY,WAAYhC,EAAMG,OAAOL,QAASA,MAAO,EAAK0C,MAAM9B,KAAKoE,MAAMc,cAI1L,uBAAK/F,UAAU,wBACX,uBAAKA,UAAU,wBACX,uBAAKyB,MAAO,CAAC6F,aAAc,MAAO1B,UAAU,MAAO9D,SAAS,UAA5D,aACA,4BAAUS,YAAY,iBAAiBd,MAAO,CAACS,MAAM,OAAQhC,SAAU,SAACC,GAAS,EAAKgC,YAAY,UAAWhC,EAAMG,OAAOL,QAASA,MAAO,EAAK0C,MAAM9B,KAAK6G,WAE9J,uBAAK1H,UAAU,wBACX,uBAAKyB,MAAO,CAAC6F,aAAc,MAAO1B,UAAU,MAAO9D,SAAS,UAA5D,aACA,yBAAOS,YAAY,iBAAiBd,MAAO,CAACS,MAAM,OAAQhC,SAAU,SAACC,GAAS,EAAKgC,YAAY,YAAahC,EAAMG,OAAOL,QAASA,MAAO,EAAK0C,MAAM9B,KAAK8G,iBApDxH,EA4DzDrG,mBAAqB,WACjB,OACI,uBAAKtB,UAAU,gBACX,uBAAKA,UAAU,iBACX,uBAAKA,UAAU,oBACX,uBAAKA,UAAU,yBACX,qBAAGyB,MAAO,CAACS,MAAM,QAAS,EAAKS,MAAM9B,KAAK2E,OACzC,EAAK7C,MAAM9B,KAAK0G,SAAY,EAAK5E,MAAM9B,KAAKoE,MAAMc,SAAa,EAAKpD,MAAM0E,OAAS,gBAAC,MAAD,CAAmBpF,KAAM,GAAIQ,QAAS,EAAK2E,oBAAuB,gBAAC,MAAD,CAAqBnF,KAAM,GAAIQ,QAAS,EAAK2E,oBAAsB,MAE3N,EAAKzE,MAAM0E,SAAW,EAAK1E,MAAM9B,KAAK0G,SAAW,EAAK5E,MAAM9B,KAAKoE,MAAMa,MAAS,uBAAK9F,UAAU,wBAAf,IAAuC,yBAAK,EAAK2C,MAAM9B,KAAK0G,SAA5D,IAAyE,yBAAG,qBAAG1B,KAAM,EAAKlD,MAAM9B,KAAKoE,MAAMa,KAAMxF,OAAO,UAAU,EAAKqC,MAAM9B,KAAKoE,MAAMc,WAAxJ,KAAmL,MAExQ,EAAKpD,MAAM9B,KAAK8G,WAAa,EAAKhF,MAAM9B,KAAK6G,QAAU,uBAAK1H,UAAU,oBACtC,KAA5B,EAAK2C,MAAM9B,KAAK6G,QAAiB,uBAAK1H,UAAU,oBAAf,IAAmC,yBAAI,EAAK2C,MAAM9B,KAAK6G,SAAvD,KAA6E,KAChF,KAA9B,EAAK/E,MAAM9B,KAAK8G,UAAmB,uBAAK3H,UAAU,iBAAf,IAAgC,yBAAI,EAAK2C,MAAM9B,KAAK8G,WAApD,KAA4E,MAC3G,QAxErB,EAAKhF,MAAQ,CACT0E,QAAQ,EACRxG,KAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,eAJE,E,+BAgFzDhB,OAAA,WACI,OAAOQ,KAAKH,MAAMsC,UAAYnC,KAAK8B,kBAAoB9B,KAAKe,sB,GAlF5CX,aCgCxB,E,oJArCIiH,UAAY,SAACxF,EAAanC,GACtB,IAAMY,EAAO,EAAKT,MAAMU,UAAX,KACZD,EAAK,EAAKT,MAAMW,cAAiCqB,GAAOnC,EACzD,EAAKG,MAAMU,UAAX,KAA6BD,I,EAGjCS,mBAAqB,WACjB,IAAMT,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OACI,uBAAKf,UAAU,gBACX,uBAAKwB,IAAKX,EAAKmD,MAAO9B,MAAM,QACV,KAAjBrB,EAAKgH,QAAiB,uBAAK7H,UAAU,oBAAoBa,EAAKgH,SAAiB,O,EAK5FxF,gBAAkB,WACd,IAAMxB,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OACI,uBAAKf,UAAU,oBACX,uBAAKA,UAAU,oBACX,sCACA,yBAAOuC,YAAY,YAAYd,MAAO,CAACS,MAAM,OAAQjC,MAAOY,EAAKmD,MAAO9D,SAAU,SAACC,GAAS,EAAKyH,UAAU,QAASzH,EAAMG,OAAOL,WAErI,uBAAKD,UAAU,oBACX,wCACA,yBAAOuC,YAAY,wBAAwBd,MAAO,CAACS,MAAM,OAAQjC,MAAOY,EAAKgH,QAAS3H,SAAU,SAACC,GAAS,EAAKyH,UAAU,UAAWzH,EAAMG,OAAOL,a,iCAMjKF,OAAA,WACI,OAAOQ,KAAKH,MAAMsC,UAAYnC,KAAK8B,kBAAoB9B,KAAKe,sB,GAnC5CX,a,QCsFxB,E,oJApFImH,eAAiB,SAACC,EAAkBC,EAAkB/H,GAClD,IAAMY,EAAO,EAAKT,MAAMU,UAAX,KACZD,EAAK,EAAKT,MAAMW,cAAhB,KAAqDgH,GAAUC,GAAY/H,EAC5E,EAAKG,MAAMU,UAAX,KAA6BD,I,EAGjCoH,kBAAoB,SAACD,EAAkB/H,GACnC2D,QAAQC,IAAI,SAAW5D,GACvB,IAAMY,EAAO,EAAKT,MAAMU,UAAX,KACZD,EAAK,EAAKT,MAAMW,cAAhB,QAAsDiH,GAAY/H,EACnE,EAAKG,MAAMU,UAAX,KAA6BD,I,EAGjCqH,OAAS,WACL,IAAMrH,EAAO,EAAKT,MAAMU,UAAX,KACbD,EAAK,EAAKT,MAAMW,cAAhB,uBAA6CF,EAAK,EAAKT,MAAMW,cAAhB,MAA7C,CAAmG,IAAIoH,MAAMC,OAAOvH,EAAK,EAAKT,MAAMW,cAAhB,OAAwCsH,KAAK,MACjK,EAAKjI,MAAMU,UAAX,KAA6BD,I,EAGjCyH,UAAY,SAACrI,GACT,MAAO,QAAQsI,KAAKtI,I,EAGxBuI,OAAS,WACL,IAAMC,EAAUC,OAAO,oDACvB,GAAI,EAAKJ,UAAUG,GAAS,CACxB,IAAM5H,EAAO,EAAKT,MAAMU,UAAX,KACZD,EAAK,EAAKT,MAAMW,cAAhB,KAAqDK,OAAOgH,OAAOK,GAAS,EAAG,GAChF,EAAKrI,MAAMU,UAAX,KAA6BD,QAG7B8H,MAAM,sB,EAIdC,UAAY,SAAC3I,GACT,IAAMY,EAAO,EAAKT,MAAMU,UAAX,KACbD,EAAK,EAAKT,MAAMW,cAAhB,MAAyCd,EACzC,EAAKG,MAAMU,UAAX,KAA6BD,I,EAGjCS,mBAAqB,WACjB,IAAMT,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OACI,uBAAMf,UAAU,gBACZ,uBAAKA,UAAU,cAAca,EAAK2E,OAClC,yBAAO/D,MAAO,CAACS,MAAM,QACjB,0BACKrB,EAAKgI,QAAQpI,KAAI,SAACC,EAAMS,GAAP,OAAiB,0BAAMT,OAE5CG,EAAKiI,KAAKrI,KAAI,SAACC,EAAMqH,GAAP,OAAoB,0BAC9BrH,EAAKD,KAAI,SAACsI,EAAKf,GAAN,OAAmB,0BAAMe,a,EAOvD1G,gBAAkB,WACd,IAAMxB,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OACI,uBAAKf,UAAU,gBACX,yBAAOyB,MAAO,CAACC,OAAO,OAAQQ,MAAM,OAAQK,YAAY,qBAAqBtC,MAAOY,EAAK2E,MAAOtF,SAAU,SAACC,GAAD,OAAS,EAAKyI,UAAUzI,EAAMG,OAAOL,UAC/I,yBAAOwB,MAAO,CAACS,MAAM,QACjB,0BACKrB,EAAKgI,QAAQpI,KAAI,SAACC,EAAMS,GAAP,OAAiB,0BAAI,yBAAOM,MAAO,CAACS,MAAM,QAASK,YAAa,eAAiBpB,EAAM,GAAIlB,MAAOS,EAAMR,SAAU,SAACC,GAAD,OAAS,EAAK8H,kBAAkB9G,EAAOhB,EAAMG,OAAOL,eAE3LY,EAAKiI,KAAKrI,KAAI,SAACC,EAAMqH,GAAP,OAAoB,0BAC9BrH,EAAKD,KAAI,SAACsI,EAAKf,GAAN,OAAmB,0BAAI,yBAAOzF,YAAa,QAAQwF,EAAS,GAAG,YAAcC,EAAS,GAAI/H,MAAO8I,EAAK7I,SAAW,SAAAC,GAAK,OAAE,EAAK2H,eAAeC,EAAUC,EAAU7H,EAAMG,OAAOL,mBAG/L,2BACI,0BAAQwB,MAAO,CAACC,OAAQ,QAASe,QAAS,kBAAI,EAAKyF,WAAnD,aACA,0BAAQzG,MAAO,CAACC,OAAQ,QAASe,QAAS,kBAAI,EAAK+F,WAAnD,mB,iCAMhBzI,OAAA,WACI,OAAOQ,KAAKH,MAAMsC,UAAYnC,KAAK8B,kBAAkB9B,KAAKe,sB,GAlF9CX,aCkCpB,E,oJAxBIW,mBAAqB,WACjB,IAAMT,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OAAQ,2BAASf,UAAU,eAAea,EAAK0G,U,EAGnDyB,YAAc,SAAC/I,GACX,IAAIY,EAAO,EAAKT,MAAMU,UAAX,KACXD,EAAK,EAAKT,MAAMW,cAAhB,QAA2Cd,EAC3C,EAAKG,MAAMU,UAAX,KAA6BD,I,EAGjCwB,gBAAkB,WACd,IAAMxB,EAAO,EAAKT,MAAMU,UAAX,KAA6B,EAAKV,MAAMW,cACrD,OAAO,uBAAKf,UAAU,cAClB,uBAAKyB,MAAO,CAAC6F,aAAc,QAA3B,iBACA,4BAAUrH,MAAOY,EAAK0G,QAAS9F,MAAO,CAACS,MAAO,OAAQhC,SAAU,SAACC,GAAD,OAAS,EAAK6I,YAAY7I,EAAMG,OAAOL,Y,iCAI/GF,OAAA,WACI,OAAOQ,KAAKH,MAAMsC,UAAYnC,KAAK8B,kBAAoB9B,KAAKe,sB,GAtB9CX,aCLlBkE,EAAc,SAACH,GACf,OAAOA,GACH,IAAK,WACD,MAAO,CACHc,MAAO,GACPE,KAAM,GACNH,WAAY,QACZE,WAAY,OACZR,MAAO,GACPe,YAAa,IAErB,IAAK,YACD,MAAO,CACHR,MAAO,GACP+B,QAAS,GACTG,QAAS,GACTC,UAAW,GACX1C,MAAO,CACH,KAAQ,GACR,SAAY,KAGxB,IAAK,cACD,MAAO,CACHwB,MAAO,GACPC,KAAM,GACNM,MAAO,GACPL,YAAa,GACbC,KAAM,GACNd,KAAM,GACNQ,aAAc,IAEtB,IAAK,kBACD,MAAO,CACHW,OAAQ,GACRC,KAAM,GACNC,QAAS,IAEjB,IAAK,cAIL,IAAK,gBACD,MAAO,CACHrC,MAAO,IAEf,IAAK,WACD,MAAO,CACHhC,OAAQ,IAEhB,IAAK,YACD,MAAO,CACHvB,SAAU,GACVQ,UAAW,GACXf,SAAU,IAElB,IAAK,YACD,MAAM,CACFgD,MAAO,GACP6D,QAAS,IAEjB,IAAK,QACD,IAAIoB,EAAWP,OAAO,8CAItB,YAHiBpD,IAAb2D,GAA2BX,EAAUW,KACrCA,EAAW,KAET,CACFzD,MAAO,GACP0D,KAAMd,OAAOa,GACbJ,QAAS,IAAIV,MAAcC,OAAOa,IAAWZ,KAAK,IAClDS,KAAM,IAEd,IAAK,UACD,MAAM,CACFvB,QAAS,MAKrBe,EAAY,SAACrI,GACb,MAAO,QAAQsI,KAAKtI,IAGpB2E,EAAW,WACX,IAAMuE,EAAW,IAAIC,KACrB,OAAQD,EAASE,kBAAmBC,WAAcH,EAASI,aAAcD,WAAcH,EAASK,aAAcF,WAAcH,EAASM,WAAYH,WAAcH,EAASO,UAAWJ,WAAcH,EAASQ,WAAYL,WAAcH,EAASS,cAAeN,YAG5PvE,EAAe,SAAChE,EAAsB2D,EAAchC,EAAmBmH,GACvE,OAAOnF,GACH,IAAK,WACD,OAAO,gBAAC,EAAD,CAAUtC,IAAKrB,EAAc2B,UAAWA,EAAW3B,aAAcA,EAAcD,UAAW+I,IACrG,IAAK,YACD,OAAO,gBAAC,EAAD,CAAWzH,IAAKrB,EAAc2B,UAAWA,EAAW3B,aAAcA,EAAcD,UAAW+I,IACtG,IAAK,cACD,OAAO,gBAAC,EAAD,CAAazH,IAAKrB,EAAc2B,UAAWA,EAAW3B,aAAcA,EAAcD,UAAW+I,IACxG,IAAK,kBACD,OAAO,gBAAC,EAAD,CAAiBzH,IAAKrB,EAAc2B,UAAWA,EAAW3B,aAAcA,EAAcD,UAAW+I,IAC5G,IAAK,cACD,OAAO,gBAAC,EAAD,CAAUzH,IAAKrB,EAAc2B,UAAWA,EAAW3B,aAAcA,EAAcD,UAAW+I,EAASnF,KAAK,gBACnH,IAAK,gBACD,OAAO,gBAAC,EAAD,CAAUtC,IAAKrB,EAAc2B,UAAWA,EAAW3B,aAAcA,EAAcD,UAAW+I,EAASnF,KAAK,kBACnH,IAAK,WACD,OAAO,gBAAC,EAAD,CAAUtC,IAAKrB,EAAc2B,UAAWA,EAAW3B,aAAcA,EAAcD,UAAW+I,IACrG,IAAK,YACD,OAAO,gBAAC,EAAD,CAAWzH,IAAKrB,EAAc2B,UAAWA,EAAW3B,aAAcA,EAAcD,UAAW+I,IACtG,IAAK,YACD,OAAO,gBAAC,EAAD,CAAWzH,IAAKrB,EAAc2B,UAAWA,EAAW3B,aAAcA,EAAcD,UAAW+I,IACtG,IAAK,QACD,OAAO,gBAAC,EAAD,CAAOzH,IAAKrB,EAAc2B,UAAWA,EAAW3B,aAAcA,EAAcD,UAAW+I,IAClG,IAAK,UACD,OAAO,gBAAC,EAAD,CAASzH,IAAKrB,EAAc2B,UAAWA,EAAW3B,aAAcA,EAAcD,UAAW+I,MC/F5G,E,oJAnBIrB,OAAS,WACgBsB,QAAQ,oDAEzB,EAAK1J,MAAMqC,W,iCAInB1C,OAAA,WAAS,IAAD,OACJ,OACI,uBAAKC,UAAU,cACX,uBAAKA,UAAU,iBACVO,KAAKH,MAAM2J,UAEhB,0BAAQ/J,UAAU,mBAAmByC,QAAS,WAAK,EAAK+F,WAAxD,gBAAiFjI,KAAKH,MAAM8G,KAA5F,O,GAfSvG,a,oBC2BzB,E,6FArBIZ,OAAA,WAAS,IAAD,OACJ,OACI,uBAAKC,UAAU,qBACX,2BAAMO,KAAKH,MAAM4J,WAAa,YAAc,aAC5C,uBAAKhK,UAAU,mBACVO,KAAKH,MAAM4J,WAAa,0BAAQhK,UAAU,qBAAqByC,QAAS,kBAAI,EAAKrC,MAAM6J,aACpF,gBAAC,MAAD,CAAQhI,KAAM,KACd,uBAAKjC,UAAU,0BAAf,iBACQ,KACZ,0BAAQA,UAAU,qBAAqByC,QAAS,WAAK,EAAKrC,MAAM8J,gBAC3D3J,KAAKH,MAAM4J,WAAa,gBAAC,MAAD,CAAQ/H,KAAM,KAAQ,gBAAC,MAAD,CAAWA,KAAM,KAChE,uBAAKjC,UAAU,0BACVO,KAAKH,MAAM4J,WAAa,OAAS,Y,GAdvCrJ,aCOnBwJ,EAAcxJ,gBAAoB,IAmFtC,E,YAlEI,WAAYP,EAAsBuC,GAAsB,IAAD,SACnD,cAAMvC,EAAOuC,IAAb,MAfJyH,gBAA2B,CACvB,WACA,cACA,cACA,gBACA,WACA,YACA,YACA,kBACA,YACA,QACA,WAGmD,EAQvD5F,cAAgB,SAACzD,EAAsBI,GACnC,IAAMkJ,EAAaC,KAAKC,MAAMD,KAAKE,UAAU,EAAK7H,MAAM7B,mBACjDuJ,EAAWtJ,GACjBsJ,EAAU,WAGNjJ,OAAOD,EAAM,GAClB,EAAKiC,SAAS,CACVtC,UAAWuJ,KAhBoC,EAoBvD5F,gBAAkB,SAACC,EAAcvD,GAC7B,IAAMkJ,EAAaC,KAAKC,MAAMD,KAAKE,UAAU,EAAK7H,MAAM7B,YAClD6D,EAASC,IACdyF,EAAU,WAA6DjJ,OAAOD,EAAM,EAAE,CACnF,aAAgBwD,EAChB,KAAQD,IAEZ2F,EAAW1F,GAAUE,EAAYH,GACjC,EAAKtB,SAAS,CACVtC,UAAWuJ,KA7BoC,EAiCvDI,YAAc,WACVC,gBAA0B,QAAQ,EAAKtK,MAAMuK,YAAYC,KAAM,EAAKjI,MAAM7B,YAhC1E,EAAK6B,MAAQ,CACTD,WAAW,EACX5B,UAAWwJ,KAAKC,MAAMD,KAAKE,UAAU,EAAKpK,MAAMuK,YAAYE,gBAJb,E,+BAqCvD9K,OAAA,WAAS,IAAD,OACE+K,EAAiB,GAOvB,OANAA,EAAc,KAAWvK,KAAKoC,MAAM7B,UACpCgK,EAAc,KAAW,SAACC,GACtB,EAAK3H,SAAS,CACVtC,UAAWiK,KAIf,gBAACZ,EAAYa,SAAb,CAAsB/K,MAAO6K,GACxBJ,sBAAiC,gBAAC,EAAD,CAAUV,WAAYzJ,KAAKoC,MAAMD,UAAWwH,YAAa,WAAK,EAAK9G,SAAS,CAACV,WAAY,EAAKC,MAAMD,aAAcuH,SAAU1J,KAAKkK,cAAiB,KACpL,uBAAKhJ,MAAO,CAACS,MAAM,OAAQgE,cAAc,SAAUC,eAAe,aAAcC,WAAW,WACrF7F,KAAKoC,MAAM7B,UAAX,WAAiFL,KAAI,SAACC,EAAMS,GAAP,OAAiB,2BACnG,EAAKwB,MAAMD,UAAY,gBAAC,EAAD,CAAQlC,QAAS,EAAK4J,gBAAiB/J,SAAU,SAACqE,GAAQ,EAAKD,gBAAgBC,EAAMvD,MAAa,KACzH,EAAKwB,MAAMD,UAAY,gBAAC,EAAD,CAAYN,IAAK1B,EAAKK,aAAcmG,KAAMxG,EAAKgE,KAAMjC,QAAS,WAAK,EAAK+B,cAAc9D,EAAKK,aAAcI,KAC7H,gBAACgJ,EAAYc,SAAb,MACK,SAAAhL,GAAK,OAAI8E,EAAarE,EAAKK,aAAcL,EAAKgE,KAAM,EAAK/B,MAAMD,UAAWzC,OAE/D,gBAACkK,EAAYc,SAAb,MACX,SAAAhL,GAAK,OAAI8E,EAAarE,EAAKK,aAAcL,EAAKgE,KAAM,EAAK/B,MAAMD,UAAWzC,UAGtFM,KAAKoC,MAAMD,UAAY,gBAAC,EAAD,CAAQlC,QAASD,KAAK6J,gBAAiB/J,SAAU,SAACqE,GAAQ,EAAKD,gBAAgBC,EAAO,EAAK/B,MAAM7B,UAAX,WAAiFiC,WAAc,Q,GA1E1MpC","file":"component---src-components-pageview-page-view-tsx-7ca0abb77807bf7452f4.js","sourcesContent":["import React from 'react';\nimport \"./AddNew.css\";\n\ninterface AddNewProps{\n    options: string[];\n    onSelect: (type:string) => void;\n}\n\nclass AddNew extends React.Component<AddNewProps>{\n    render(){\n        return(\n            <div className=\"addNewElement\">\n                <div className=\"addNewLine\"/>\n                <select className=\"addNewOptions\" value={\"Add New Here\"} onChange={(event)=>{this.props.onSelect(event.target.value)}}>\n                    <option value={\"Add New Here\"}>{\"Add New Here\"}</option>\n                    {this.props.options.map((each: string) => <option value={each}>{each}</option>)}\n                </select>\n                <div className=\"addNewLine\"/>\n            </div>\n        )\n    }\n}\n\nexport default AddNew;","import React from 'react';\nimport { BsDot } from 'react-icons/bs';\nimport { BatchViewModel } from '../../models/Model';\nimport './BatchView.css';\n\ninterface BatchViewProps{\n    page_data: Object;\n    component_id: string;\n    edit_mode: boolean;\n}\n\nclass BatchView extends React.Component<BatchViewProps>{\n\n    addNewEntry = () =>{\n        let data = this.props.page_data[\"data\"];\n        (data[this.props.component_id] as BatchViewModel).Students.push(\"\");\n        this.props.page_data[\"edit\"](data);\n    }\n\n    deleteEntry = (index: number) => {\n        let data = this.props.page_data[\"data\"];\n        (data[this.props.component_id] as BatchViewModel).Students.splice(index,1);\n        this.props.page_data[\"edit\"](data);\n    }\n\n    editEntry = (index: number, value: string) => {\n        let data = this.props.page_data[\"data\"];\n        data[this.props.component_id][\"Students\"][index] = value;\n        this.props.page_data[\"edit\"](data);\n    }\n\n    getDisplayElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as BatchViewModel;\n        return(\n            <div className='studentsBatch'>\n                {data.GrpImage===\"\" ? null:<img src={data.GrpImage}></img>}\n                <div className='batchTitle'>\n                    <p style={{margin: '5px', marginLeft: '20px', padding: '0px', color: 'darkblue', fontSize: 'larger'}}>{data.BatchName + ' Batch:'}</p>\n                </div>\n                <div className='studentsList'>\n                    {data.Students.map(person => <div className='studentName'><BsDot size={20}/><p style={{width:'95%'}}><i>{person}</i></p></div>)}\n                </div>    \n            </div>\n        )\n    }\n\n    editDetails = (key:string, value:string) => {\n        let data = this.props.page_data[\"data\"];\n        data[this.props.component_id][key] = value;\n        this.props.page_data[\"edit\"](data);\n    }\n\n    getEditElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as BatchViewModel;\n        return(\n            <div className='studentsBatchEdit'>\n                <div className='batchViewTitleRowEdit'>\n                    <div style={{marginRight: \"10px\"}}>Batch Name:</div>\n                    <input placeholder=\"Name of the Batch\" style={{width:\"200px\"}} onChange={(event)=>{this.editDetails(\"BatchName\", event.target.value)}} value={data.BatchName}></input>\n                </div>\n                <div className='batchViewTitleRowEdit'>\n                    <div style={{marginRight: \"10px\"}}>Batch Image:</div>\n                    <input placeholder=\"Image URL (optional)\" style={{width:\"200px\"}} onChange={(event)=>{this.editDetails(\"GrpImage\", event.target.value)}} value={data.GrpImage}></input>\n                </div>\n                <div style={{margin: \"4px\", marginLeft: \"15px\", fontSize: \"large\", textAlign: \"left\",width:\"100%\"}}> Students:</div>\n                <div className='studentsListEdit'>\n                    {data.Students.map((person, index) => <div key={index} className=\"studentListEntryEdit\">\n                        <input placeholder={\"Student No. \" + (index + 1)} style={{width:\"85%\"}} onChange={(event)=>{this.editEntry(index, event.target.value)}} value={person}></input>\n                        <button key={index} onClick={()=>{this.deleteEntry(index)}} className=\"studentsListEntryRemoveEdit\">x</button>\n                    </div>)}\n                    <button style={{width: \"88%\"}} onClick={()=>{this.addNewEntry()}}>Add New Entry</button>\n                </div>    \n            </div>\n        )\n    }\n\n    render(){\n        return this.props.edit_mode ? this.getEditElements() : this.getDisplayElements() \n    }\n}\n\nexport default BatchView;","import React from 'react';\nimport {BsChevronCompactRight} from 'react-icons/bs';\nimport {BsChevronCompactLeft} from 'react-icons/bs';\nimport './Carousel.css';\nimport {Swipeable} from '../swipeable/Swipeable';\nimport { CarouselModel } from '../../models/Model';\nimport { SwipeEventData } from 'react-swipeable';\n\ninterface CarouselProps{\n    edit_mode: boolean;\n    page_data: Object;\n    component_id: string;\n}\n\ninterface CarouselState{\n    currentPic: number;\n}\n\nclass Carousel extends React.Component<CarouselProps,CarouselState>{\n    id: any;\n    timeout: number;\n\n    constructor(props: CarouselProps, state: CarouselState){\n        super(props,state);\n        this.state = {\n            currentPic: 0\n        }\n        this.timeout = 10000;\n        this.id = setInterval(this.nextPic, this.timeout);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.id);\n    }\n\n    nextPic =():void =>{\n        const data = this.props.page_data[\"data\"][this.props.component_id] as CarouselModel;\n        const imagesNum = data.images.length;\n        clearInterval(this.id);\n        this.id = setInterval(this.nextPic, this.timeout);\n        this.setState({\n            currentPic: (this.state.currentPic === imagesNum - 1) ? 0 : this.state.currentPic + 1\n        })\n    }\n\n    prevPic =():void =>{ \n        const data = this.props.page_data[\"data\"][this.props.component_id] as CarouselModel;\n        const imagesNum = data.images.length;\n        clearInterval(this.id);\n        this.id = setInterval(this.nextPic, this.timeout);\n        this.setState({\n            currentPic: (this.state.currentPic === 0) ? imagesNum-1 : this.state.currentPic - 1\n        })\n    }\n\n    swipeRightEvent=(event: SwipeEventData):void =>{\n        event.event.stopPropagation();\n        this.prevPic();\n    }\n\n    swipeLeftEvent=():void =>{\n        this.nextPic();\n    }\n\n    addNewPic = () =>{\n        let data = this.props.page_data[\"data\"];\n        (data[this.props.component_id] as CarouselModel).images.push(\"\");\n        this.props.page_data[\"edit\"](data);\n    }\n\n    removePic = (index: number) => {\n        let data = this.props.page_data[\"data\"];\n        console.log(index);\n        (data[this.props.component_id] as CarouselModel).images.splice(index,1);\n        this.props.page_data[\"edit\"](data);\n    }\n\n    editLink = (index: number, newLink: string) => {\n        let data = this.props.page_data[\"data\"];\n        (data[this.props.component_id] as CarouselModel).images[index] = newLink;\n        this.props.page_data[\"edit\"](data);\n    }\n\n    getEditElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as CarouselModel;\n        return(\n            <div className='carouselEdit'>\n                <div className=\"carouselNameEdit\">Carousel Images:</div>\n                <div className=\"carouselListEdit\">\n                    {data.images.map((image, index) => <div className=\"carouselLinkEdit\">\n                        <input style={{width:\"88%\"}} placeholder={\"Image No. \" + (index + 1)} value={image} onChange={(event)=>{this.editLink(index, event.target.value)}}></input>\n                        <button className=\"carouselRemoveEdit\" onClick={()=>{this.removePic(index)}}>x</button>\n                    </div>)}\n                </div>\n                <button style={{width: \"150px\"}} onClick={()=>{this.addNewPic()}}>Add New Image</button>\n            </div>\n        )\n    }\n\n    getDisplayElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as CarouselModel;\n        const imagesNum = data.images.length;\n        return(\n            <Swipeable onSwipedRight={this.swipeRightEvent} onSwipedLeft={this.swipeLeftEvent} >\n                <div style={{width:\"100%\", backgroundColor:\"rgb(250,250,250)\", paddingTop:\"8px\", paddingBottom:\"8px\"}}>\n                    <div className='carousel'>\n                        {imagesNum > 1 ? <BsChevronCompactLeft size={32} color='darkgrey' onClick={this.prevPic} className='carouselButtons'/> : null}\n                        <div className='carouselImage'>\n                            <img src={data.images[this.state.currentPic]} width='100%'/>\n                        </div>\n                        {imagesNum > 1 ? <BsChevronCompactRight size={32} color='darkgrey' onClick={this.nextPic} className='carouselButtons'/> : null}\n                    </div>\n                </div>\n            </Swipeable>\n        )\n    }\n\n    render(){\n        return this.props.edit_mode ? this.getEditElements() : this.getDisplayElements()\n    }\n}\n\nexport default Carousel;","import React from 'react';\nimport { GridViewModel } from '../../models/Model';\nimport { getComponent, getNewId, getNewModel } from '../../utils/PageUtils';\nimport AddNew from '../addnew/AddNew';\nimport DeleteThis from '../deletethis/DeleteThis';\nimport InfoView from '../infoview/InfoView';\nimport './GridView.css';\n\ninterface GridViewProps{\n    page_data: Object;\n    component_id: string;\n    edit_mode: boolean;\n    type: \"GridViewTwo\" | \"GridViewThree\";\n}\n\nclass GridView extends React.Component<GridViewProps>{\n\n    deleteElement = (component_id: string, index: number) => {\n        let data = this.props.page_data[\"data\"];\n        delete data[component_id];\n        (data[this.props.component_id][\"items\"] as {\n            \"component_id\":string,\n            \"type\":string\n        }[]).splice(index,1);\n        this.props.page_data[\"edit\"](data);\n    }\n\n    addNewComponent = (type: string, index: number) => {\n        const new_id = getNewId();\n        let data = this.props.page_data[\"data\"];\n        (data[this.props.component_id][\"items\"] as {\"component_id\": string, \"type\":string}[]).splice(index,0,{\n            \"component_id\": new_id,\n            \"type\": type\n        });\n        data[new_id] = getNewModel(type);\n        this.props.page_data[\"edit\"](data);\n    }\n\n    getDisplayElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as GridViewModel;\n        return(\n            <div className={this.props.type}>\n                {data.items.map(each => getComponent(each.component_id, each.type, this.props.edit_mode, this.props.page_data))}\n            </div>\n        )\n    }\n\n    getEditElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as GridViewModel;\n        return(\n            <div className={this.props.type + \"Edit\"}>\n                {data.items.map((each, index) => <div className=\"gridViewitemColEdit\">\n                    <button className=\"gridViewItemRemove\" onClick={()=>{this.deleteElement(each.component_id, index)}}>Remove This \"{each.type}\"</button>\n                    {getComponent(each.component_id, each.type, this.props.edit_mode, this.props.page_data)}\n                </div>)}\n                <select style={{width:\"200px\"}} value={\"Add New\"} onChange={(event)=>{this.addNewComponent(event.target.value,  data.items.length)}}>\n                    <option value={\"Add New Element\"}>{\"Add New Element\"}</option>\n                    <option value={\"infoview\"}>{\"infoview\"}</option>\n                    <option value={\"profileview\"}>{\"profileview\"}</option>\n                </select>\n            </div>\n        )\n    }\n\n    render(){\n        return this.props.edit_mode ? this.getEditElements() : this.getDisplayElements()\n    }\n}\n\n export default GridView;","import React from 'react';\nimport {InfoViewModel} from '../../models/Model';\nimport './InfoView.css';\n\ninterface InfoViewProps{\n    page_data: Object;\n    component_id: string;\n    edit_mode: boolean;\n}\n\nclass InfoView extends React.Component<InfoViewProps>{\n\n    addLink = () => {\n        let data = this.props.page_data[\"data\"];\n        (data[this.props.component_id] as InfoViewModel).links.push({\n            \"link\":\"\",\n            \"linktext\":\"\"\n        });\n        this.props.page_data[\"edit\"](data);\n    }\n\n    removeLink = (index: number) => {\n        let data = this.props.page_data[\"data\"];\n        (data[this.props.component_id] as InfoViewModel).links.splice(index,1);\n        this.props.page_data[\"edit\"](data);\n    }    \n\n    modifyLink = (index: number, value: string) => {\n        let data = this.props.page_data[\"data\"];\n        (data[this.props.component_id] as InfoViewModel).links[index][\"link\"] = value;\n        this.props.page_data[\"edit\"](data);\n    }\n\n    modifyLinkText = (index: number, value: string) => {\n        let data = this.props.page_data[\"data\"];\n        (data[this.props.component_id] as InfoViewModel).links[index][\"linktext\"] = value;\n        this.props.page_data[\"edit\"](data);\n    }\n\n    editDetails = (key: string, value: string) => {\n        let data = this.props.page_data[\"data\"];\n        data[this.props.component_id][key] = value;\n        this.props.page_data[\"edit\"](data);\n    }\n\n    getDisplayElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as InfoViewModel;\n        const titlecolor: string = (data.titleColor === undefined) ? 'black' : data.titleColor\n        return <div className='infoViewbox'>\n            {(data.title !== undefined && data.title!==\"\") ? <div className='infoViewtitle' style={{color: titlecolor, textAlign: data.titleAlign}}>{data.title}</div>: null}\n            {(data.info !== undefined && data.info!==\"\") ? <p className='infoViewcontent'>{data.info}</p> : null}\n            {data.links.map(each => <p style={{alignSelf: 'flex-start', marginTop:'auto'}}><a href={each.link} target='_blank'>{each.linktext}</a></p>)}\n            {data.rightFooter ? <p style={{alignSelf:'flex-end'}}>{data.rightFooter}</p>: null}\n        </div>\n    }\n\n    getEditElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as InfoViewModel;\n        return <div className=\"infoViewEditBox\">\n            <div className='infoViewtitleEditRow'>\n                <div className=\"infoViewLabelEdit\">Title:</div>\n                <div className=\"infoViewInputEdit\" >\n                    <input placeholder=\"Enter the title here\" style={{width:\"99%\"}} value={data.title} onChange={(event)=>{this.editDetails(\"title\",event.target.value)}}></input>\n                    <div style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"flex-start\", alignItems:\"flex-start\", width:\"90%\", margin:\"8px\"}}>\n                        <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\", alignItems:\"center\", width:\"180px\"}}>\n                            <div >Title Align:</div>\n                            <select value={data.titleAlign} style={{width: \"85px\", marginLeft:\"8px\"}} onChange={(event)=>{this.editDetails(\"titleAlign\",event.target.value)}}>\n                                <option value=\"center\">Center</option>\n                                <option value=\"left\">Left</option>\n                                <option value=\"right\">Right</option>\n                            </select>\n                        </div>\n                        <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\", alignItems:\"center\", width:\"180px\"}}>\n                            <div>Title Color:</div>\n                            <select value={data.titleColor} style={{width: \"85px\", marginLeft:\"8px\"}} onChange={(event)=>{this.editDetails(\"titleColor\",event.target.value)}}>\n                                <option value=\"black\">Black</option>\n                                <option value=\"darkblue\">Dark Blue</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className='infoViewtitleEditRow'>\n                <div className=\"infoViewLabelEdit\">Content:</div>\n                <textarea placeholder=\"Enter the content here\" className=\"infoViewInputEdit\" value={data.info} onChange={(event)=>{this.editDetails(\"info\",event.target.value)}}></textarea>\n            </div>\n            <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"flex-start\", margin: \"8px\", width:\"95%\", justifyContent:\"space-between\"}}>\n                <div className=\"infoViewLabelEdit\">Links:</div>\n                <div className=\"infoViewContentListEdit\">\n                    {data.links.map((each, index) => <div className=\"infoViewContentItemsEdit\">\n                        <div className='infoViewtitleEdit'>\n                            <input placeholder=\"Link\" style={{width:\"90%\"}} value={each.link} onChange={(event)=>{this.modifyLink(index,event.target.value)}}></input>\n                        </div>\n                        <div className='infoViewtitleEdit'>\n                            <input placeholder=\"Link display text\" style={{width:\"90%\"}} value={each.linktext} onChange={(event)=>{this.modifyLinkText(index,event.target.value)}}></input>\n                        </div>\n                        <button className=\"infoViewContentRemoveEdit\" onClick={()=>{this.removeLink(index)}}>x</button>\n                    </div>)}\n                    <button style={{marginLeft: \"8px\"}} onClick={()=>{this.addLink()}}>Add New</button>\n                </div>\n            </div>\n            <div className='infoViewtitleEditRow'>\n                <div className=\"infoViewLabelEdit\">Footer:</div>\n                <input placeholder=\"Right aligned footer message\" className=\"infoViewInputEdit\" value={data.rightFooter} onChange={(event)=>{this.editDetails(\"rightFooter\",event.target.value)}}></input>\n            </div>\n        </div>\n    }\n\n    render(){\n        return(\n            this.props.edit_mode ? this.getEditElements() : this.getDisplayElements()\n        )\n    }\n}\n\nexport default InfoView;","import React from 'react';\nimport { ProfileViewModel } from '../../models/Model';\nimport './ProfileView.css';\n\ninterface ProfileViewProps{\n    edit_mode: boolean;\n    page_data: Object;\n    component_id: string;\n}\n\nclass ProfileView extends React.Component<ProfileViewProps>{\n\n    editDetails = (key: string, value: string) => {\n        let data = this.props.page_data[\"data\"];\n        data[this.props.component_id][key] = value;\n        this.props.page_data[\"edit\"](data);\n    }\n\n    addExtras = () => {\n        const data = this.props.page_data[\"data\"];\n        (data[this.props.component_id] as ProfileViewModel).extraDetails.push(\"\");\n        this.props.page_data[\"edit\"](data);\n    }\n\n    removeExtras = (index: number) => {\n        const data = this.props.page_data[\"data\"];\n        (data[this.props.component_id] as ProfileViewModel).extraDetails.splice(index,1);\n        this.props.page_data[\"edit\"](data);\n    }\n\n    modifyExtras = (index: number, value: string) => {\n        const data = this.props.page_data[\"data\"];\n        (data[this.props.component_id] as ProfileViewModel).extraDetails[index] = value;\n        this.props.page_data[\"edit\"](data);\n    }\n\n    getDisplayElements = () =>{\n        const data = this.props.page_data[\"data\"][this.props.component_id] as ProfileViewModel; \n        return(\n            <div className='profileView'>\n                <div className='profileViewImageWrap'>\n                    <img  className='profileViewImage' src={data.Image} width='100%'/>\n                </div>\n                <div className='profileInfo'>\n                    <p className='profileViewName'>{data.Name}</p>\n                    <p className='profileViewDesignation'>{data.Designation}</p>\n                    {(data.Area !== \"\") ? <p className='profileViewArea'>{'Area of Interest:  '}<p style={{fontStyle: \"italic\", margin: \"0px\",textDecoration:\"inherit\", display:\"inline\"}}>{data.Area}</p></p> : null}\n                    {data.extraDetails?.map(detail => <p className='profileViewExtras'>{detail}</p>)}\n                    {(data.email !== \"\") ? <p className='profileViewExtras'>{'Email: '}<a href={'mailto: ' + data.email} style={{fontStyle: \"italic\", textDecoration: \"none\", color: \"inherit\"}}>{data.email}</a></p> : null}\n                    {(data.link !== \"\") ? <p className='profileViewExtras'><a href={data.link}>Link to website</a> </p> : null}\n                </div>\n            </div>\n        )\n    }\n\n    getEditElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as ProfileViewModel;\n        return(\n            <div className='profileView'>\n                <div className='profileViewEdit'>\n                    <div className=\"profileViewItemEdit\">\n                        <div className=\"profileViewItemLabelEdit\">Name:</div>\n                        <input placeholder=\"Name of the Person\" className=\"profileViewInputEdit\" value={data.Name} onChange={(event)=>{this.editDetails(\"Name\",event.target.value)}}></input>\n                    </div>\n                    <div className=\"profileViewItemEdit\">\n                        <div className=\"profileViewItemLabelEdit\">Image:</div>\n                        <input placeholder=\"Image URL\" className=\"profileViewInputEdit\" value={data.Image} onChange={(event)=>{this.editDetails(\"Image\",event.target.value)}}></input>\n                    </div>\n                    <div className=\"profileViewItemEdit\">\n                        <div className=\"profileViewItemLabelEdit\">Designation:</div>\n                        <input placeholder=\"Designation (optional)\" className=\"profileViewInputEdit\" value={data.Designation} onChange={(event)=>{this.editDetails(\"Designation\",event.target.value)}}></input>\n                    </div>\n                    <div className=\"profileViewItemEdit\">\n                        <div className=\"profileViewItemLabelEdit\">Areas of Interest:</div>\n                        <textarea placeholder=\"Areas of Interest/Study (optional)\" className=\"profileViewInputEdit\" value={data.Area} onChange={(event)=>{this.editDetails(\"Area\",event.target.value)}}></textarea>\n                    </div>\n                    <div className=\"profileViewItemEdit\">\n                        <div className=\"profileViewItemLabelEdit\">Extras:</div>\n                        <div className=\"profileViewExtrasList\">\n                            {data.extraDetails.map((each, index) => <div className=\"profileViewExtrasRow\">\n                                <input placeholder={\"Extra information (optional) \" + (index + 1)} style={{width:\"90%\"}} value={each} onChange={(event)=>{this.modifyExtras(index, event.target.value)}}></input>\n                                <button className=\"profileViewExtrasCloseEdit\" onClick={()=>{this.removeExtras(index)}}>x</button>\n                            </div>)}\n                            <button onClick={()=>{this.addExtras()}}>Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"profileViewItemEdit\">\n                        <div className=\"profileViewItemLabelEdit\">Email:</div>\n                        <input placeholder=\"Email Id of the person\" className=\"profileViewInputEdit\" value={data.email} onChange={(event)=>{this.editDetails(\"email\",event.target.value)}}></input>\n                    </div>\n                    <div className=\"profileViewItemEdit\">\n                        <div className=\"profileViewItemLabelEdit\">Link:</div>\n                        <input placeholder=\"Personal wensite URL (optional)\" className=\"profileViewInputEdit\" value={data.link} onChange={(event)=>{this.editDetails(\"link\",event.target.value)}}></input>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    render(){\n        return this.props.edit_mode ? this.getEditElements() : this.getDisplayElements()\n    }\n}\n\nexport default ProfileView;","import React from 'react';\nimport { BsDot } from 'react-icons/bs';\nimport { PublicationModel } from '../../models/Model';\nimport './PublicationView.css';\n\ninterface PublicationViewProps{\n    page_data: Object;\n    component_id: string;\n    edit_mode: boolean;\n}\n\nclass PublicationView extends React.Component<PublicationViewProps>{\n\n    editDetails = (key: string, value: string) =>{\n        let data = this.props.page_data[\"data\"];\n        data[this.props.component_id][key] = value;\n        this.props.page_data[\"edit\"](data);\n    }\n\n    getEditElements = () =>{\n        const data = this.props.page_data[\"data\"][this.props.component_id] as PublicationModel \n        return(\n            <div className=\"publicationColumnEdit\">\n                <div className=\"publicationsEntryEdit\">\n                    <div className=\"publicationsEntryTitleEdit\">People:</div>\n                    <input placeholder=\"People involved/related\" style={{width:\"100%\"}} onChange={(event)=>{this.editDetails(\"people\", event.target.value)}} value={data.people}></input>\n                </div>\n                <div className=\"publicationsEntryEdit\">\n                    <div className=\"publicationsEntryTitleEdit\">Name:</div>\n                    <textarea placeholder=\"Publication Name\" style={{width: \"100%\"}} onChange={(event)=>{this.editDetails(\"name\", event.target.value)}} value={data.name}></textarea>\n                </div>\n                <div className=\"publicationsEntryEdit\">\n                    <div className=\"publicationsEntryTitleEdit\">Details:</div>\n                    <input placeholder=\"Other details like journal name etc.\" style={{width:\"100%\"}} onChange={(event)=>{this.editDetails(\"details\", event.target.value)}} value={data.details}></input>\n                </div>\n            </div>\n        )\n    }\n\n    getDisplayElements = () =>{\n        const data = this.props.page_data[\"data\"][this.props.component_id] as PublicationModel \n        return(\n            <div className='publicationsColumn'>\n                <div className='publicationPageLine'>\n                    <BsDot size={32}/>\n                    <p style={{width: '95%'}}> \n                        {data.people + ' '} \n                        <i style={{color:'darkblue'}}>{data.name}</i> \n                        {' ' + data.details}\n                    </p>\n                </div>\n            </div>\n        )\n    }\n\n    render(){\n        return this.props.edit_mode ? this.getEditElements() : this.getDisplayElements()\n    }\n}\n\nexport default PublicationView;","import React from 'react';\nimport './TableView.css'\nimport {RiArrowDropDownLine} from 'react-icons/ri';\nimport {RiArrowDropUpLine} from 'react-icons/ri';\nimport { TableViewModel } from '../../models/Model';\n\ninterface TableViewState{\n    expand: Boolean;\n    data: TableViewModel;\n}\n\ninterface TableViewProps{\n    component_id: string;\n    edit_mode: boolean;\n    page_data: Object;\n}\n\nclass TableView extends React.Component<TableViewProps,TableViewState>{\n    constructor(props: TableViewProps, state: TableViewState){\n        super(props, state);\n        this.state = {\n            expand: false,\n            data: (this.props.page_data[\"data\"][this.props.component_id] as TableViewModel)\n        }\n    }\n\n    toggleContentView = ():void =>{\n        this.setState({\n            expand: !this.state.expand\n        })\n    }\n\n    editDetails = (key: string, value: any) =>{\n        const data = this.props.page_data[\"data\"]\n        if (key!==\"link\" && key!==\"linktext\"){\n            data[this.props.component_id][key] = value;\n        }\n        else{\n            data[this.props.component_id][\"links\"][key] = value;\n        }\n        this.props.page_data[\"edit\"](data)\n    }\n\n    getEditElements = () => {\n        return(\n            <div className='tableViewRow'>\n                <div className='tableViewRest'>\n                    <div className='tableViewContent'>\n                        <div style={{marginBottom: \"2px\", fontSize:\"large\"}}>Title:</div>\n                        <input placeholder=\"Enter the title here\" value={this.state.data.title} style={{width:'95%'}} onChange={(event)=>{this.editDetails(\"title\", event.target.value)}}></input>\n                        <div style={{marginBottom: \"2px\", marginTop: \"6px\", fontSize:\"large\"}}>Content:</div>\n                        <textarea placeholder=\"Enter the content here\" value={this.state.data.content} style={{width:'95%'}} onChange={(event)=>{this.editDetails(\"content\", event.target.value)}}></textarea> \n                        <div className=\"tableViewLinksEdit\">\n                            <div style={{width:\"100%\", marginRight: \"5px\", paddingRight:\"5px\"}}>\n                                <div style={{marginBottom: \"2px\"}}>Link:</div>\n                                <input placeholder=\"Enter the link here\" style={{width:\"100%\"}} onChange={(event)=>{this.editDetails(\"link\", event.target.value)}} value={this.state.data.links.link}></input>\n                            </div>\n                            <div style={{width:\"100%\", marginLeft: \"5px\", paddingLeft:\"5px\"}}>\n                                <div style={{marginBottom: \"2px\"}}>Link display text:</div>\n                                <input placeholder=\"The display text for the link\" style={{width:\"100%\"}} onChange={(event)=>{this.editDetails(\"linktext\", event.target.value)}} value={this.state.data.links.linktext}></input>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='tableViewLastColEdit'>\n                        <div className='tableViewSpeakerEdit'> \n                            <div style={{marginBottom: \"2px\", marginTop:\"5px\", fontSize:\"large\"}}>Column 2:</div>\n                            <textarea placeholder=\"Column 2 entry\" style={{width:'95%'}} onChange={(event)=>{this.editDetails(\"speaker\", event.target.value)}} value={this.state.data.speaker}></textarea> \n                        </div> \n                        <div className='tableViewSpeakerEdit'> \n                            <div style={{marginBottom: \"2px\", marginTop:\"5px\", fontSize:\"large\"}}>Column 3:</div>\n                            <input placeholder=\"Column 3 entry\" style={{width:'95%'}} onChange={(event)=>{this.editDetails(\"dateVenue\", event.target.value)}} value={this.state.data.dateVenue}></input> \n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    getDisplayElements = () =>{\n        return(\n            <div className='tableViewRow' >\n                <div className='tableViewRest'>\n                    <div className='tableViewContent' >\n                        <div className='tableViewContentTitle'>\n                            <p style={{width:'95%'}}>{this.state.data.title}</p>\n                            {this.state.data.content || (this.state.data.links.linktext) ? (this.state.expand ? <RiArrowDropUpLine size={24} onClick={this.toggleContentView}/> : <RiArrowDropDownLine size={24} onClick={this.toggleContentView}/>):null}\n                        </div>\n                        {(this.state.expand && (this.state.data.content || this.state.data.links.link)) ? <div className='tableViewShowContent'> <p >{this.state.data.content}</p> <p><a href={this.state.data.links.link} target='_blank'>{this.state.data.links.linktext}</a></p> </div> : null}\n                    </div>\n                    {this.state.data.dateVenue || this.state.data.speaker ? <div className='tableViewLastCol'>\n                        {this.state.data.speaker !== \"\" ? <div className='tableViewSpeaker'> <p>{this.state.data.speaker}</p> </div> : null}\n                        {this.state.data.dateVenue !== \"\" ? <div className='tableViewDate'> <p>{this.state.data.dateVenue}</p> </div> : null}\n                    </div> : null}\n                </div>\n            </div>\n        )\n    }\n\n    render(){\n        return this.props.edit_mode ? this.getEditElements() : this.getDisplayElements()\n    }\n}\n\nexport default TableView;","import React from 'react';\nimport { ImageViewModel } from '../../models/Model';\nimport './ImageView.css';\n\ninterface ImageViewProps{\n    edit_mode: boolean;\n    page_data: Object;\n    component_id: string;\n}\n\nclass ImageView extends React.Component<ImageViewProps>{\n\n    editItems = (key: string, value: string) => {\n        const data = this.props.page_data[\"data\"];\n        (data[this.props.component_id] as ImageViewModel)[key] = value;\n        this.props.page_data[\"edit\"](data);\n    }\n\n    getDisplayElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as ImageViewModel;\n        return(\n            <div className=\"imageViewBox\">\n                <img src={data.image} width='90%'/>\n                {data.caption !== \"\" ? <div className=\"imageViewCaption\">{data.caption}</div> : null}\n            </div>\n        );\n    }\n\n    getEditElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as ImageViewModel;\n        return(\n            <div className=\"imageViewBoxEdit\">\n                <div className=\"imageViewRowEdit\">\n                    <div>Image: </div>\n                    <input placeholder=\"Image URL\" style={{width:\"90%\"}} value={data.image} onChange={(event)=>{this.editItems(\"image\", event.target.value)}} ></input>\n                </div>\n                <div className=\"imageViewRowEdit\">\n                    <div>Caption: </div>\n                    <input placeholder=\"Caption for the Image\" style={{width:\"90%\"}} value={data.caption} onChange={(event)=>{this.editItems(\"caption\", event.target.value)}}></input>\n                </div>\n            </div>\n        );\n    }\n\n    render(){\n        return this.props.edit_mode ? this.getEditElements() : this.getDisplayElements();\n    }\n}\n\nexport default ImageView;","import React from 'react';\nimport { TableModel } from '../../models/Model';\nimport './Table.css'\n\ninterface TableProps{\n    edit_mode: boolean;\n    page_data: Object;\n    component_id: string;\n}\n\nclass Table extends React.Component<TableProps>{\n\n    editRowElement = (rowIndex: number, colIndex: number, value: string) => {\n        const data = this.props.page_data[\"data\"];\n        (data[this.props.component_id][\"rows\"] as string[][])[rowIndex][colIndex] = value;\n        this.props.page_data[\"edit\"](data);\n    }\n\n    editHeaderElement = (colIndex: number, value: string) => {\n        console.log(\"header\" + value);\n        const data = this.props.page_data[\"data\"];\n        (data[this.props.component_id][\"headers\"] as string[])[colIndex] = value;\n        this.props.page_data[\"edit\"](data);\n    }\n\n    addrow = () =>{\n        const data = this.props.page_data[\"data\"];\n        data[this.props.component_id][\"rows\"] = [...(data[this.props.component_id][\"rows\"] as string[][]), new Array(Number(data[this.props.component_id][\"cols\"])).fill(\"\")];\n        this.props.page_data[\"edit\"](data);\n    }\n\n    isNumeric = (value) => {\n        return /^\\d+$/.test(value);\n    }\n\n    delete = () => {\n        const row_ind = prompt(\"PLease enter the index of the row to be deleted:\");\n        if (this.isNumeric(row_ind)){\n            const data = this.props.page_data[\"data\"];\n            (data[this.props.component_id][\"rows\"] as string[][]).splice(Number(row_ind)-1, 1);\n            this.props.page_data[\"edit\"](data);\n        }\n        else{\n            alert(\"Invalid row index\");\n        }\n    }\n\n    editTitle = (value) => {\n        const data = this.props.page_data[\"data\"];\n        data[this.props.component_id][\"title\"] = value;\n        this.props.page_data[\"edit\"](data);\n    }\n\n    getDisplayElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as TableModel;\n        return(\n            <div  className=\"tableBoxEdit\" >\n                <div className=\"tableTitle\">{data.title}</div>\n                <table style={{width:\"90%\"}}>\n                    <tr>\n                        {data.headers.map((each, index) => <th >{each}</th>)}\n                    </tr>\n                    {data.rows.map((each, rowIndex) => <tr>\n                        {each.map((col, colIndex) => <td >{col}</td>) }\n                    </tr>)}\n                </table>\n            </div>\n        );\n    }\n\n    getEditElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as TableModel;\n        return(\n            <div className=\"tableBoxEdit\">\n                <input style={{margin:\"10px\", width:\"70%\"}} placeholder=\"Title of the table\" value={data.title} onChange={(event)=>this.editTitle(event.target.value)}></input>\n                <table style={{width:\"90%\"}}>\n                    <tr>\n                        {data.headers.map((each, index) => <th><input style={{width:\"100%\"}} placeholder={\"Header No. \" + (index+1)} value={each} onChange={(event)=>this.editHeaderElement(index, event.target.value)}></input></th>)}\n                    </tr>\n                    {data.rows.map((each, rowIndex) => <tr>\n                        {each.map((col, colIndex) => <td><input placeholder={\"Row \"+(rowIndex+1)+\" Column \" + (colIndex+1)} value={col} onChange={(event=>this.editRowElement(rowIndex, colIndex, event.target.value))}></input></td>) }\n                    </tr>)}\n                </table>\n                <div>\n                    <button style={{margin: \"10px\"}} onClick={()=>this.addrow()}>Add a row</button>\n                    <button style={{margin: \"10px\"}} onClick={()=>this.delete()}>Remove a row</button>\n                </div>\n            </div>\n        );\n    }\n\n    render(){\n        return this.props.edit_mode ? this.getEditElements():this.getDisplayElements();\n    }\n}\n\nexport default Table","import React from 'react';\nimport { MarqueeModel } from '../../models/Model';\nimport './Marquee.css';\n\ndeclare global {\n    namespace JSX {\n      interface IntrinsicElements {\n        marquee: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n      }\n    }\n  }\n\ninterface MarqueeProps{\n    edit_mode: boolean;\n    page_data: Object;\n    component_id: string;\n}\n\nclass Marquee extends React.Component<MarqueeProps>{\n\n    getDisplayElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as MarqueeModel;\n        return (<marquee className=\"marqueeText\">{data.content}</marquee>);\n    }\n\n    editContent = (value: string) =>{\n        let data = this.props.page_data[\"data\"];\n        data[this.props.component_id][\"content\"] = value;\n        this.props.page_data[\"edit\"](data);\n    }\n\n    getEditElements = () => {\n        const data = this.props.page_data[\"data\"][this.props.component_id] as MarqueeModel;\n        return(<div className=\"marqueeBox\">\n            <div style={{marginBottom: \"8px\"}}>Marquee Text:</div>\n            <textarea value={data.content} style={{width: \"90%\"}} onChange={(event)=>this.editContent(event.target.value)}></textarea>\n        </div>)\n    }\n\n    render(){\n        return this.props.edit_mode ? this.getEditElements() : this.getDisplayElements();\n    }\n}\n\nexport default Marquee;","import BatchView from \"../components/batchview/BatchView\";\nimport Carousel from \"../components/carousel/Carousel\";\nimport GridView from \"../components/gridview/GridView\";\nimport InfoView from \"../components/infoview/InfoView\";\nimport ProfileView from \"../components/profileview/ProfileView\";\nimport PublicationView from \"../components/publicationview/PublicationView\";\nimport TableView from \"../components/tableview/TableView\";\nimport ImageView from \"../components/imageview/ImageView\";\nimport { BatchViewModel, CarouselModel, GridViewModel, ImageViewModel, InfoViewModel, ProfileViewModel, PublicationModel, TableViewModel, TableModel, MarqueeModel} from \"../models/Model\"\nimport React from 'react';\nimport Table from \"../components/table/Table\";\nimport Marquee from \"../components/marquee/Marquee\";\n\nlet getNewModel = (type: string) => {\n    switch(type){\n        case \"infoview\": \n            return {\n                title: \"\",\n                info: \"\",\n                titleColor: \"black\",\n                titleAlign: \"left\",\n                links: [],\n                rightFooter: \"\"\n            } as InfoViewModel;\n        case \"tableview\":\n            return {\n                title: \"\",\n                content: \"\",\n                speaker: \"\",\n                dateVenue: \"\",\n                links: {\n                    \"link\": \"\", \n                    \"linktext\": \"\"\n                }\n            } as TableViewModel;\n        case \"profileview\":\n            return {\n                Image: \"\",\n                Name: \"\",\n                email: \"\",\n                Designation: \"\",\n                Area: \"\",\n                link: \"\",\n                extraDetails: [],\n            } as ProfileViewModel;\n        case \"publicationview\":\n            return {\n                people: \"\",\n                name: \"\",\n                details: \"\"\n            } as PublicationModel;\n        case \"gridviewtwo\":\n            return {\n                items: []\n            } as GridViewModel;\n        case \"gridviewthree\":\n            return {\n                items: []\n            } as GridViewModel;\n        case \"carousel\":\n            return {\n                images: []\n            } as CarouselModel;\n        case \"batchview\":\n            return {\n                GrpImage: \"\",\n                BatchName: \"\",\n                Students: []\n            } as BatchViewModel\n        case \"imageview\":\n            return{\n                image: \"\",\n                caption: \"\"\n            } as ImageViewModel\n        case \"table\":\n            let cols_num = prompt(\"Enter the number of columns for the table:\");\n            if (cols_num === undefined || !isNumeric(cols_num)){\n                cols_num = \"2\";\n            }\n            return{\n                title: \"\",\n                cols: Number(cols_num),\n                headers: new Array<string>(Number(cols_num)).fill(\"\"),\n                rows: []\n            } as TableModel;\n        case \"marquee\":\n            return{\n                content: \"\"\n            } as MarqueeModel;\n    }\n}\n\nlet isNumeric = (value) => {\n    return /^\\d+$/.test(value);\n}\n\nlet getNewId = () =>{\n    const datetime = new Date();\n    return (datetime.getMilliseconds()).toString() + (datetime.getSeconds()).toString() + (datetime.getMinutes()).toString() + (datetime.getHours()).toString() + (datetime.getDate()).toString() + (datetime.getMonth()).toString() + (datetime.getFullYear()).toString()\n}\n\nlet getComponent = (component_id: string, type: string, edit_mode:boolean, context: Object) => {\n    switch(type){\n        case \"infoview\": \n            return <InfoView key={component_id} edit_mode={edit_mode} component_id={component_id} page_data={context}/>\n        case \"tableview\":\n            return <TableView key={component_id} edit_mode={edit_mode} component_id={component_id} page_data={context}/>\n        case \"profileview\":\n            return <ProfileView key={component_id} edit_mode={edit_mode} component_id={component_id} page_data={context}/>\n        case \"publicationview\":\n            return <PublicationView key={component_id} edit_mode={edit_mode} component_id={component_id} page_data={context}/>\n        case \"gridviewtwo\":\n            return <GridView key={component_id} edit_mode={edit_mode} component_id={component_id} page_data={context} type=\"GridViewTwo\"/>\n        case \"gridviewthree\":\n            return <GridView key={component_id} edit_mode={edit_mode} component_id={component_id} page_data={context} type=\"GridViewThree\"/>\n        case \"carousel\":\n            return <Carousel key={component_id} edit_mode={edit_mode} component_id={component_id} page_data={context}/>\n        case \"batchview\":\n            return <BatchView key={component_id} edit_mode={edit_mode} component_id={component_id} page_data={context}/>\n        case \"imageview\":\n            return <ImageView key={component_id} edit_mode={edit_mode} component_id={component_id} page_data={context}/>\n        case \"table\":\n            return <Table key={component_id} edit_mode={edit_mode} component_id={component_id} page_data={context}/>\n        case \"marquee\":\n            return <Marquee key={component_id} edit_mode={edit_mode} component_id={component_id} page_data={context}/>\n    }\n}\n\nexport {getNewModel, getNewId, getComponent}","import React from 'react';\nimport \"./DeleteThis.css\";\n\ninterface DeleteThisProps{\n    name: string;\n    onClick: ()=>void;\n}\n\nclass DeleteThis extends React.Component<DeleteThisProps>{\n\n    delete = () => {\n        const confirmation = confirm(\"Are you sure you want to delete this component?\");\n        if(confirmation){\n            this.props.onClick();\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"deleteThis\">\n                <div className=\"deleteThisBox\">\n                    {this.props.children}\n                </div>\n                <button className=\"deleteThisButton\" onClick={()=>{this.delete()}}>Delete This \"{this.props.name}\"</button>\n            </div>\n        )\n    }\n}\n\nexport default DeleteThis;","import React from'react';\nimport {BiEditAlt} from 'react-icons/bi';\nimport {GrView} from 'react-icons/gr';\nimport {BiSave} from 'react-icons/bi';\nimport './AdminBar.css';\n\ninterface AdminBarProps{\n    edit_toggle : Function;\n    onSubmit: Function;\n    edit_state: boolean;\n}\n\nclass AdminBar extends React.Component<AdminBarProps>{\n\n    render(){\n        return(\n            <div className=\"adminBarComponent\">\n                <div>{this.props.edit_state ? \"Edit Mode\" : \"View Mode\"}</div>\n                <div className=\"adminBarButtons\">\n                    {this.props.edit_state ? <button className=\"adminBarEditButton\" onClick={()=>this.props.onSubmit()}>\n                        <BiSave size={18}/>\n                        <div className=\"adminBarEditButtonText\">Save Changes</div>\n                    </button> : null}\n                    <button className=\"adminBarEditButton\" onClick={()=>{this.props.edit_toggle()}}>\n                        {this.props.edit_state ? <GrView size={18}/> : <BiEditAlt size={18}/>}\n                        <div className=\"adminBarEditButtonText\">\n                            {this.props.edit_state ? \"View\" : \"Edit\"}\n                        </div>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AdminBar;","import React from 'react';\nimport { FirebaseUtils } from '../../utils/FirebaseUtils';\nimport AddNew from '../addnew/AddNew';\nimport {getComponent, getNewId, getNewModel} from '../../utils/PageUtils';\nimport DeleteThis from '../deletethis/DeleteThis';\nimport AdminBar from '../adminbar/AdminBar';\n\ninterface PageViewProps{\n    pageContext: {\n        page: string;\n        current_data: Object;\n    }\n}\n\ninterface PageViewState{\n    edit_mode: boolean;\n    page_data: Object;\n}\n\nlet PageContext = React.createContext({});\n\nclass PageView extends React.Component<PageViewProps, PageViewState>{\n    component_types:string[] = [\n        \"infoview\",\n        \"profileview\",\n        \"gridviewtwo\",\n        \"gridviewthree\",\n        \"carousel\",\n        \"batchview\",\n        \"tableview\",\n        \"publicationview\",\n        \"imageview\",\n        \"table\",\n        \"marquee\"\n    ]\n\n    constructor(props: PageViewProps, state: PageViewState){\n        super(props, state);\n        this.state = {\n            edit_mode: false,\n            page_data: JSON.parse(JSON.stringify(this.props.pageContext.current_data))\n        }\n    }\n\n    deleteElement = (component_id: string, index: number) => {\n        const _page_data = JSON.parse(JSON.stringify(this.state.page_data));\n        delete _page_data[component_id];\n        (_page_data[\"components\"] as {\n            \"component_id\":string,\n            \"type\":string\n        }[]).splice(index,1);\n        this.setState({\n            page_data: _page_data\n        })\n    }\n\n    addNewComponent = (type: string, index: number) => {\n        const _page_data = JSON.parse(JSON.stringify(this.state.page_data));\n        const new_id = getNewId();\n        (_page_data[\"components\"] as {\"component_id\": string, \"type\":string}[]).splice(index,0,{\n            \"component_id\": new_id,\n            \"type\": type\n        });\n        _page_data[new_id] = getNewModel(type);\n        this.setState({\n            page_data: _page_data\n        })\n    }\n\n    saveChanges = () =>{\n        FirebaseUtils.saveChanges(\"pages\",this.props.pageContext.page, this.state.page_data);\n    }\n\n    render(){\n        const context_object = {}\n        context_object[\"data\"] = this.state.page_data\n        context_object[\"edit\"] = (newState: Object) => {\n            this.setState({\n                page_data: newState\n            });\n        }\n        return(\n            <PageContext.Provider value={context_object}>\n                {FirebaseUtils.isAdminLoggedIn()? <AdminBar edit_state={this.state.edit_mode} edit_toggle={()=>{this.setState({edit_mode: !this.state.edit_mode})}} onSubmit={this.saveChanges}/> : null}\n                <div style={{width:\"100%\", flexDirection:\"column\", justifyContent:\"flex-start\", alignItems:\"center\"}}>\n                    {(this.state.page_data[\"components\"] as {\"component_id\": string, \"type\":string}[]).map((each, index) => <div>\n                        {this.state.edit_mode ? <AddNew options={this.component_types} onSelect={(type)=>{this.addNewComponent(type, index)}}/> : null}\n                        {this.state.edit_mode ? <DeleteThis key={each.component_id} name={each.type} onClick={()=>{this.deleteElement(each.component_id, index)}}>\n                            <PageContext.Consumer>\n                                {value => getComponent(each.component_id, each.type, this.state.edit_mode, value)}\n                            </PageContext.Consumer>\n                            </DeleteThis> : <PageContext.Consumer>\n                                {value => getComponent(each.component_id, each.type, this.state.edit_mode, value)}\n                            </PageContext.Consumer>}\n                    </div>) }\n                    {this.state.edit_mode ? <AddNew options={this.component_types} onSelect={(type)=>{this.addNewComponent(type, (this.state.page_data[\"components\"] as {\"component_id\": string, \"type\":string}[]).length)}}/> : null}\n                </div>\n            </PageContext.Provider>\n        )\n    }\n}\n\nexport default PageView;"],"sourceRoot":""}