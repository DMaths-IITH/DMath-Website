name: Build and Deploy
on:
  workflow_dispatch

permissions:
  actions: write

jobs:
  Build-Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm i

      - name: Gatsby Cli installation
        run: npm install -g gatsby-cli

      - name: Clear existing build and cache
        run: gatsby clean
      
      - name: Gatsby Build
        run: gatsby build

      - name: Zipping the build folder
        run: |
          cd public
          zip -r public.zip *
          mv public.zip ../

      - name: VPN setup
        run: |
          sudo apt-get update
          sudo apt install wireguard resolvconf

      - name: Key setup
        run: |
          sudo mkdir -p /etc/wireguard/keys
          sudo touch publickey privatekey wg0.conf trial.txt
          echo ${{ secrets.VPN_KEY_PUB }} | sudo tee publickey
          echo ${{ secrets.VPN_KEY_PRI }} | sudo tee privatekey
          echo -e ${{ secrets.VPN_CONF }} | sudo tee wg0.conf

      - name: Move configs
        run: |
          sudo mv publickey /etc/wireguard/keys/
          sudo mv privatekey /etc/wireguard/keys/
          sudo mv wg0.conf /etc/wireguard/
      
      - name: Start VPN
        run: sudo wg-quick up wg0

      - name: Secure transfer of build files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PSWD }}
          port: ${{ secrets.REMOTE_PORT }}
          source: "public.zip"
          target: "deployment"
          timeout: 60s

      - name: Unzip and deploy changes on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PSWD }}
          port: ${{ secrets.REMOTE_PORT }}
          script: | 
            cd deployment
            mv public.zip ../
            cd ..
            rm -r deployment
            shopt -s extglob
            rm -r -v !("oldsite"|"liar"|"public.zip"|"images"|"pdfs")
            unzip -o public.zip
          
                
