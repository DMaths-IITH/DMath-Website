name: Build and Deploy
on:
  workflow_dispatch

permissions:
  actions: write

jobs:
  Build-Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm i

      - name: Gatsby Cli installation
        run: npm install -g gatsby-cli

      - name: Clear existing build and cache
        run: gatsby clean
      
      - name: Gatsby Build
        run: gatsby build

      - name: Zipping the build folder
        run: |
          cd public
          zip -r new_build.zip *
          mv new_build.zip ../
          rm -rf

      - name: VPN setup
        run: |
          sudo apt-get update
          sudo apt install wireguard resolvconf

      - name: Key setup
        run: |
          sudo mkdir -p /etc/wireguard/keys
          sudo touch sftp_private_key publickey privatekey wg0.conf trial.txt
          echo ${{ secrets.VPN_KEY_PUB }} | sudo tee publickey
          echo ${{ secrets.VPN_KEY_PRI }} | sudo tee privatekey
          echo ${{ secrets.SFTP_PRIVATE_KEY }} | sudo tee sftp_private_key
          echo -e ${{ secrets.VPN_CONF }} | sudo tee wg0.conf

      - name: Move configs
        run: |
          sudo mv publickey /etc/wireguard/keys/
          sudo mv privatekey /etc/wireguard/keys/
          sudo mv wg0.conf /etc/wireguard/
      
      - name: Start VPN
        run: sudo wg-quick up wg0

      - name: Get existing files from remote
        run: sftp -r -i sftp_private_key {{ secrets.SFTP_REMOTE_USER }}@{{ secrets.SFTP_REMOTE_HOST }}:/public /public

      - name: Create a backup of the existing website for safety reasons
        run: |
          cd public
          zip -r old_build.zip *
          mv old_build.zip ../

      - name: Remove old build files
        run: |
          cd public
          shopt -s extglob
          rm -r -v !("oldsite"|"liar"|"public.zip"|"images"|"pdfs")

      - name: Add new build files to the public folder
        run: |
          cp new_build.zip /public
          cd public
          unzip -o new_build.zip

      - name: Archive both the new build as well as old for safety reasons.
        uses: actions/upload-artifact@v4
        with: 
          name: bundles
          path: /*.zip
      
      - name: Secure transfer of build files to server
        run: sftp -r -i sftp_private_key {{ secrets.SFTP_REMOTE_USER }}@{{ secrets.SFTP_REMOTE_HOST }}: <<< $'put public /public'
